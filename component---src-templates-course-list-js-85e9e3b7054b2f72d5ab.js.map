{"version":3,"sources":["webpack:///component---src-templates-course-list-js-85e9e3b7054b2f72d5ab.js","webpack:///./src/templates/course-list.js"],"names":["webpackJsonp","240","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","query","undefined","_react","_react2","_gatsbyLink","_gatsbyLink2","_ref","data","location","pathContext","cirriculumPath","pathname","split","filter","x","slice","matchingCourses","allMarkdownRemark","edges","_ref2","node","fields","cirriculumPrefix","frontmatter","type","createElement","className","map","_ref3","key","id","to","slug","title"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,EAASC,GAEhC,YAaA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAXvFH,EAAQI,YAAa,EACrBJ,EAAQM,MAAQC,MCRjB,IAAAC,GAAAP,EAAA,GDYKQ,EAAUP,EAAuBM,GCXtCE,EAAAT,EAAA,IDeKU,EAAeT,EAAuBQ,EAI1CV,GAAQK,QCjBM,SAAAO,GAAqC,GAAlCC,GAAkCD,EAAlCC,KAAmBC,GAAeF,EAA5BG,YAA4BH,EAAfE,UAK7BE,EAAiBF,EAASG,SAC7BC,MAAM,KACNC,OAAO,SAAAC,GAAA,MAAKA,KACZC,OAAM,GAAI,GAMPC,EAAkBT,EAAKU,kBAAkBC,MAAML,OAAO,SAAAM,GAAc,GAAXC,GAAWD,EAAXC,IAC7D,OACEA,GAAKC,OAAOC,mBAAqBZ,GACjC,WAAAU,EAAKG,YAAYC,MAIrB,OACErB,GAAAJ,QAAA0B,cAAA,SAAOC,UAAU,uBACfvB,EAAAJ,QAAA0B,cAAA,aACGT,EAAgBW,IAAI,SAAAC,GAAA,GAAGR,GAAHQ,EAAGR,IAAH,OACnBjB,GAAAJ,QAAA0B,cAAA,MAAII,IAAKT,EAAKU,IACZ3B,EAAAJ,QAAA0B,cAAA,UACEtB,EAAAJ,QAAA0B,cAAApB,EAAAN,SAAM2B,UAAU,iBAAiBK,GAAIX,EAAKC,OAAOW,MAC9CZ,EAAKG,YAAYU,aAUrBjC","file":"component---src-templates-course-list-js-85e9e3b7054b2f72d5ab.js","sourcesContent":["webpackJsonp([105407397762403],{\n\n/***/ 240:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.query = undefined;\n\t\n\tvar _react = __webpack_require__(3);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(48);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (_ref) {\n\t  var data = _ref.data,\n\t      pathContext = _ref.pathContext,\n\t      location = _ref.location;\n\t\n\t  /*\n\t  this path nonsense is bc we need the trailing slug from the url\n\t  this is diff on PROD, bc github-pg has the repo name as the first url path /woz-u-instructional-materials\n\t  */\n\t  var cirriculumPath = location.pathname.split(\"/\").filter(function (x) {\n\t    return x;\n\t  }).slice(-1)[0];\n\t  /*\n\t  Course-List will only list those courses relevant to the given\n\t  cirriculum, based on the url path of pathContext.rootPath as it\n\t  matches the course cirriculum in slug form\n\t  */\n\t  var matchingCourses = data.allMarkdownRemark.edges.filter(function (_ref2) {\n\t    var node = _ref2.node;\n\t\n\t    return node.fields.cirriculumPrefix === cirriculumPath && node.frontmatter.type === \"course\";\n\t  });\n\t\n\t  return _react2.default.createElement(\n\t    \"table\",\n\t    { className: \"table table-striped\" },\n\t    _react2.default.createElement(\n\t      \"tbody\",\n\t      null,\n\t      matchingCourses.map(function (_ref3) {\n\t        var node = _ref3.node;\n\t        return _react2.default.createElement(\n\t          \"tr\",\n\t          { key: node.id },\n\t          _react2.default.createElement(\n\t            \"td\",\n\t            null,\n\t            _react2.default.createElement(\n\t              _gatsbyLink2.default,\n\t              { className: \"bracket-select\", to: node.fields.slug },\n\t              node.frontmatter.title\n\t            )\n\t          )\n\t        );\n\t      })\n\t    )\n\t  );\n\t};\n\t\n\tvar query = exports.query = \"** extracted graphql fragment **\";\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-templates-course-list-js-85e9e3b7054b2f72d5ab.js","import React from \"react\";\nimport Link, { withPrefix } from \"gatsby-link\";\n\nexport default ({ data, pathContext, location }) => {\n  /*\n  this path nonsense is bc we need the trailing slug from the url\n  this is diff on PROD, bc github-pg has the repo name as the first url path /woz-u-instructional-materials\n  */\n  const cirriculumPath = location.pathname\n    .split(\"/\")\n    .filter(x => x)\n    .slice(-1)[0];\n  /*\n  Course-List will only list those courses relevant to the given\n  cirriculum, based on the url path of pathContext.rootPath as it\n  matches the course cirriculum in slug form\n  */\n  const matchingCourses = data.allMarkdownRemark.edges.filter(({ node }) => {\n    return (\n      node.fields.cirriculumPrefix === cirriculumPath &&\n      node.frontmatter.type === `course`\n    );\n  });\n\n  return (\n    <table className=\"table table-striped\">\n      <tbody>\n        {matchingCourses.map(({ node }) => (\n          <tr key={node.id}>\n            <td>\n              <Link className=\"bracket-select\" to={node.fields.slug}>\n                {node.frontmatter.title}\n              </Link>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport const query = graphql`\n  query courseQuery {\n    allMarkdownRemark {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            cirriculum\n            type\n          }\n          fields {\n            slug\n            cirriculumPrefix\n          }\n        }\n      }\n    }\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// ./src/templates/course-list.js"],"sourceRoot":""}