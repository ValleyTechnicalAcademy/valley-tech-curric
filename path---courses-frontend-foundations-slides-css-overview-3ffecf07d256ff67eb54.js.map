{"version":3,"sources":["webpack:///path---courses-frontend-foundations-slides-css-overview-3ffecf07d256ff67eb54.js","webpack:///./.cache/json/courses-frontend-foundations-slides-css-overview.json"],"names":["webpackJsonp","420","module","exports","data","allMarkdownRemark","edges","node","html","internal","content","fields","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,mBAAqBC,QAAUC,MAAQC,KAAA,gmOAA6mJC,UAAojFC,QAAA,i9KAAs+KC,QAAWC,KAAA,2DAAiEC,aAAgBD,KAAA","file":"path---courses-frontend-foundations-slides-css-overview-3ffecf07d256ff67eb54.js","sourcesContent":["webpackJsonp([93318097395779],{\n\n/***/ 420:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"html\":\"<p>class: middle center</p>\\n<h2>HTML5</h2>\\n<p>.left[</p>\\n<ul>\\n<li>\\n<p>Review</p>\\n</li>\\n<li>\\n<p>Node: In the HTML Document Object Model (DOM), everything is a node.</p>\\n</li>\\n<li>\\n<p>Tag: The beginning of an HTML element, usually denoted with angle brackets\\nsurrounding a tag type. Ex: <p></p>\\n</li>\\n<li>\\n<p>Element: A distinct component of an HTML document, usually comprised of\\nstart and end tags surrounding some kind of content. Ex: <p></p></p>\\n</li>\\n<li>\\n<p>Attribute: Modifications to a given element.\\n]</p>\\n</li>\\n</ul>\\n<hr>\\n<p>class: middle left</p>\\n<ul>\\n<li>\\n<p>Navitgation</p>\\n<ul>\\n<li>Just Fancy styled Links</li>\\n</ul>\\n</li>\\n<li>\\n<p>Cross Browser</p>\\n<ul>\\n<li>GROSS</li>\\n<li>\\n<p>Friends don’t let friends support Internet Explorer 8</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code><!--[if lt IE 9]>\\nthe code here will only run if browser is older than IE 9\\n<![endif]--></code></pre>\\n      </div>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n<hr>\\n<h2>CSS3 Review</h2>\\n<p>.left[</p>\\n<ul>\\n<li>\\n<p>Selectors</p>\\n</li>\\n<li>\\n<p>ID: denoted a hash symbol (#) #container { color:black }</p>\\n</li>\\n<li>\\n<p>Class: denoted by a period (.) .leftColumn { color:red }</p>\\n</li>\\n<li>\\n<p>Element: denoted by the tag name nav { height: 45px; width: 100%; }</p>\\n</li>\\n<li>\\n<p>States</p>\\n<ul>\\n<li>:link</li>\\n<li>:vistied</li>\\n<li>:hover</li>\\n<li>:active</li>\\n<li>:focus <a class=\\\"navlink\\\" href=\\\"#\\\">Home</a> a.navlink:hover { color: green;\\n}\\n]</li>\\n</ul>\\n</li>\\n</ul>\\n<hr>\\n<p>class: left</p>\\n<h3>Elements</h3>\\n<ul>\\n<li>\\n<p>::before</p>\\n<ul>\\n<li>adds content text or a shape before the HTML element is selected.</li>\\n</ul>\\n</li>\\n<li>\\n<p>::after</p>\\n<ul>\\n<li>adds content text or a shape after the HTML element is selected.</li>\\n</ul>\\n</li>\\n<li>::first-letter ::first-line</li>\\n</ul>\\n<hr>\\n<p>class: left</p>\\n<h3>Properties</h3>\\n<ul>\\n<li>margin</li>\\n<li>border</li>\\n<li>padding</li>\\n<li>font</li>\\n<li>background</li>\\n<li>\\n<p>display</p>\\n<ul>\\n<li>display: none</li>\\n<li>display: inline</li>\\n<li>display: block</li>\\n<li>visibility: hidden\\n<a href=\\\"https://resources.api.exeterlms.com/Resources/5cdb8f9b-3ac6-4ac7-93fe-83dd21bb5032\\\">LEARN ME</a></li>\\n</ul>\\n</li>\\n</ul>\\n<hr>\\n<ul>\\n<li>\\n<p>Position</p>\\n<ul>\\n<li>relative</li>\\n<li>absolute</li>\\n<li>fixed</li>\\n<li>top, right, bottom or left</li>\\n</ul>\\n</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>  <style>\\n    div {color:yellow; width:200px; height:50px; background:gray;}\\n  </style>\\n  <div>Some text here</div></code></pre>\\n      </div>\\n<hr>\\n<h2>Cassacading Inheritance</h2>\\n<ul>\\n<li>\\n<p><strong>Ordering</strong> - from least important to most</p>\\n<ol>\\n<li>\\n<p>Importance (!important) - Overuse of !important is not good.</p>\\n</li>\\n<li>\\n<p>Specificity :-/</p>\\n</li>\\n<li>\\n<p><a href=\\\"http://jsbin.com/nahovis/2/edit?html,css\\\">Sample</a></p>\\n</li>\\n<li>\\n<p>Source Order</p>\\n</li>\\n<li>\\n<p><a href=\\\"http://jsbin.com/pefuta/4/edit?html,css\\\">Sample</a></p>\\n</li>\\n<li>\\n<p>Inheritance</p>\\n</li>\\n<li>\\n<p><a href=\\\"http://jsbin.com/kiraseb/4/edit?html,css\\\">Sample</a></p>\\n</li>\\n</ol>\\n</li>\\n</ul>\\n<hr>\\n<h2><strong>Styling Fonts</strong></h2>\\n<p>.left[</p>\\n<ul>\\n<li>the web browser is going to rely on the user’s system</li>\\n<li><a href=\\\"http://www.ampsoft.net/webdesign-l/WindowsMacFonts.html\\\">Common Fonts</a></li>\\n<li>ems for relative font sizing</li>\\n<li>@font-face (Go get me some fonts!) * @font-face { font-family: roboto-thin; src:\\nurl(<a href=\\\"https://cdnjs.cloudflare.com/ajax/libs/ink/3.1.10/fonts/Roboto/roboto-thin-webfont.ttf\\\">https://cdnjs.cloudflare.com/ajax/libs/ink/3.1.10/fonts/Roboto/roboto-thin-webfont.ttf</a>);\\n}\\n]</li>\\n</ul>\\n<hr>\\n<h3>Challenge</h3>\\n<ul>\\n<li><a href=\\\"https://codepen.io/Jtomchak/pen/jwQNpW/?editors=1100\\\">BOOM</a></li>\\n<li><a href=\\\"https://upload.wikimedia.org/wikiversity/en/b/bd/Css1_1.png\\\">Make it look like</a></li>\\n</ul>\\n<hr>\\n<h2><strong>Media Queries</strong></h2>\\n<p>.left[</p>\\n<ul>\\n<li>in CSS3, we are able to target specific screen sizes.</li>\\n<li>used extensivly for ‘responsive design’</li>\\n<li>\\n<p>queries used</p>\\n<ul>\\n<li>width and height of the viewport</li>\\n<li>width and height of the device</li>\\n<li>orientation (is the tablet/phone in landscape or portrait mode?)</li>\\n<li>resolution</li>\\n<li>there is a pile, most used</li>\\n<li>width , min-width , max-width</li>\\n<li>height , min-height , max-height</li>\\n</ul>\\n</li>\\n<li>@media (max-width: 768px) and (orientation: portrait) { //these would only\\nto screens width 768 or less //like your mobile computing device }</li>\\n<li>\\n<p>viewport patch</p>\\n<ul>\\n<li>\\n<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n</li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://css-tricks.com/snippets/css/media-queries-for-standard-devices/\\\">ALL THE SIZES</a>\\n]</li>\\n</ul>\\n<hr>\\n<h2><strong>Style and Layout</strong></h2>\\n<p>.left[</p>\\n<ul>\\n<li>\\n<p>Position</p>\\n<ul>\\n<li>Static</li>\\n<li>stacks elements, the default</li>\\n<li>Relative</li>\\n<li>position in some direction</li>\\n<li>Absolute</li>\\n<li>position relative to the body of the document</li>\\n<li>Fixed * position on the page, not the document, stays even when scrolling\\n]</li>\\n</ul>\\n</li>\\n</ul>\\n<hr>\\n<h2><strong>Responsive versus adaptive</strong></h2>\\n<p>.left[</p>\\n<ul>\\n<li>\\n<p>responsive: respond to the size of the browser at any given point</p>\\n<ul>\\n<li>fluid and flexible</li>\\n</ul>\\n</li>\\n<li>adaptive: adaptive websites adapt to the width of the browser at a specific\\npoints. more like a snap too.</li>\\n<li><a href=\\\"https://cdn.css-tricks.com/wp-content/uploads/2015/11/rwd-vs-adapt-example.gif\\\">Animated Example</a></li>\\n<li><a href=\\\"https://www.fastcodesign.com/3038367/9-gifs-that-explain-responsive-design-brilliantly\\\">More Examples</a>\\n]</li>\\n</ul>\\n<hr>\\n<h2>Challenge 2</h2>\\n<ul>\\n<li><a href=\\\"https://codepen.io/Jtomchak/pen/OgaLGL/\\\">BOOM</a></li>\\n<li><a href=\\\"http://lewagon.github.io/html-css-challenges/03-box-model/\\\">Make it look like</a></li>\\n</ul>\\n<hr>\\n<h2><strong>Resources</strong></h2>\\n<p>.left[</p>\\n<ul>\\n<li><a href=\\\"https://www.smashingmagazine.com/mastering-css-principles-comprehensive-reference-guide/\\\">Super Guide</a></li>\\n<li><a href=\\\"https://www.simplilearn.com/css3-resources-ultimate-list-article\\\">Super Duper Guide</a></li>\\n<li>\\n<p>Pre-processors</p>\\n<ul>\\n<li>Less, Sass, Scss, Stylus, Css-Crush, Myth, Rework</li>\\n<li>Cool, but why?</li>\\n<li>Color (client color scheme)</li>\\n<li>Duplication (all the browsers all the radius corners)</li>\\n<li>Cascade (deeply nested)</li>\\n<li>Calculation (font size plus wha?)</li>\\n<li>Importing (double gross)</li>\\n<li>Compiles to CSS\\n]</li>\\n</ul>\\n</li>\\n</ul>\\n<hr>\\n<h2>Bootstrap 3</h2>\\n<ul>\\n<li>Grid and Layout</li>\\n<li>*</li>\\n</ul>\\n<hr>\\n<h2>Challenge 3</h2>\\n<ul>\\n<li>Now add Bootstrap 3 to your movie favs page</li>\\n<li>change the first card into a Jumbotron</li>\\n<li>social card will now be buttons, tastfully placed and socially themed</li>\\n<li>make your 3 movies into a col-md</li>\\n<li>last card as a footer</li>\\n<li>SCSS style use</li>\\n<li>color theme, palette</li>\\n<li>*</li>\\n</ul>\\n<hr>\",\"internal\":{\"content\":\"---\\ntitle: \\\"CSS Review\\\" \\ncourseId:  \\\"FSWG101\\\"\\ncirriculum: \\n  - \\\"Software Development\\\"\\ntype: \\\"slide\\\"\\ndraft: false\\n---\\n\\nclass: middle center\\n\\n## HTML5\\n\\n.left[\\n\\n* Review\\n\\n* Node: In the HTML Document Object Model (DOM), everything is a node.\\n* Tag: The beginning of an HTML element, usually denoted with angle brackets\\n  surrounding a tag type. Ex: <p>\\n* Element: A distinct component of an HTML document, usually comprised of\\n  start and end tags surrounding some kind of content. Ex: <p></p>\\n* Attribute: Modifications to a given element.\\n  ]\\n\\n---\\n\\nclass: middle left\\n\\n* Navitgation\\n  * Just Fancy styled Links\\n* Cross Browser\\n  * GROSS\\n  * Friends don't let friends support Internet Explorer 8\\n  ```\\n  <!--[if lt IE 9]>\\n  the code here will only run if browser is older than IE 9\\n  <![endif]-->\\n  ```\\n\\n---\\n\\n## CSS3 Review\\n\\n.left[\\n\\n* Selectors\\n\\n* ID: denoted a hash symbol (#) #container { color:black }\\n\\n* Class: denoted by a period (.) .leftColumn { color:red }\\n\\n* Element: denoted by the tag name nav { height: 45px; width: 100%; }\\n\\n* States\\n  * :link\\n  * :vistied\\n  * :hover\\n  * :active\\n  * :focus <a class=\\\"navlink\\\" href=\\\"#\\\">Home</a> a.navlink:hover { color: green;\\n    }\\n    ]\\n\\n---\\n\\nclass: left\\n\\n### Elements\\n\\n* ::before\\n  * adds content text or a shape before the HTML element is selected.\\n* ::after\\n  * adds content text or a shape after the HTML element is selected.\\n* ::first-letter ::first-line\\n\\n---\\n\\nclass: left\\n\\n### Properties\\n\\n* margin\\n* border\\n* padding\\n* font\\n* background\\n* display\\n  * display: none\\n  * display: inline\\n  * display: block\\n  * visibility: hidden\\n    [LEARN ME](https://resources.api.exeterlms.com/Resources/5cdb8f9b-3ac6-4ac7-93fe-83dd21bb5032)\\n\\n---\\n\\n* Position\\n  * relative\\n  * absolute\\n  * fixed\\n  * top, right, bottom or left\\n\\n```\\n  <style>\\n    div {color:yellow; width:200px; height:50px; background:gray;}\\n  </style>\\n  <div>Some text here</div>\\n```\\n\\n---\\n\\n## Cassacading Inheritance\\n\\n* **Ordering** - from least important to most\\n\\n  1. Importance (!important) - Overuse of !important is not good.\\n  2. Specificity :-/\\n     * [Sample](http://jsbin.com/nahovis/2/edit?html,css)\\n  3. Source Order\\n     * [Sample](http://jsbin.com/pefuta/4/edit?html,css)\\n\\n  * Inheritance\\n    * [Sample](http://jsbin.com/kiraseb/4/edit?html,css)\\n\\n---\\n\\n## **Styling Fonts**\\n\\n.left[\\n\\n* the web browser is going to rely on the user's system\\n* [Common Fonts](http://www.ampsoft.net/webdesign-l/WindowsMacFonts.html)\\n* ems for relative font sizing\\n* @font-face (Go get me some fonts!) \\\\* @font-face { font-family: roboto-thin; src:\\n  url(https://cdnjs.cloudflare.com/ajax/libs/ink/3.1.10/fonts/Roboto/roboto-thin-webfont.ttf);\\n  }\\n  ]\\n\\n---\\n\\n### Challenge\\n\\n* [BOOM](https://codepen.io/Jtomchak/pen/jwQNpW/?editors=1100)\\n* [Make it look like](https://upload.wikimedia.org/wikiversity/en/b/bd/Css1_1.png)\\n\\n---\\n\\n## **Media Queries**\\n\\n.left[\\n\\n* in CSS3, we are able to target specific screen sizes.\\n* used extensivly for 'responsive design'\\n* queries used\\n  * width and height of the viewport\\n  * width and height of the device\\n  * orientation (is the tablet/phone in landscape or portrait mode?)\\n  * resolution\\n  * there is a pile, most used\\n    1. width , min-width , max-width\\n    2. height , min-height , max-height\\n* @media (max-width: 768px) and (orientation: portrait) { //these would only\\n  to screens width 768 or less //like your mobile computing device }\\n* viewport patch\\n  * <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n* [ALL THE SIZES](https://css-tricks.com/snippets/css/media-queries-for-standard-devices/)\\n  ]\\n\\n---\\n\\n## **Style and Layout**\\n\\n.left[\\n\\n* Position\\n  * Static\\n    * stacks elements, the default\\n  * Relative\\n    * position in some direction\\n  * Absolute\\n    * position relative to the body of the document\\n  * Fixed \\\\* position on the page, not the document, stays even when scrolling\\n    ]\\n\\n---\\n\\n## **Responsive versus adaptive**\\n\\n.left[\\n\\n* responsive: respond to the size of the browser at any given point\\n  * fluid and flexible\\n* adaptive: adaptive websites adapt to the width of the browser at a specific\\n  points. more like a snap too.\\n* [Animated Example](https://cdn.css-tricks.com/wp-content/uploads/2015/11/rwd-vs-adapt-example.gif)\\n* [More Examples](https://www.fastcodesign.com/3038367/9-gifs-that-explain-responsive-design-brilliantly)\\n  ]\\n\\n---\\n\\n## Challenge 2\\n\\n* [BOOM](https://codepen.io/Jtomchak/pen/OgaLGL/)\\n* [Make it look like](http://lewagon.github.io/html-css-challenges/03-box-model/)\\n\\n---\\n\\n## **Resources**\\n\\n.left[\\n\\n* [Super Guide](https://www.smashingmagazine.com/mastering-css-principles-comprehensive-reference-guide/)\\n* [Super Duper Guide](https://www.simplilearn.com/css3-resources-ultimate-list-article)\\n* Pre-processors\\n  * Less, Sass, Scss, Stylus, Css-Crush, Myth, Rework\\n  * Cool, but why?\\n    * Color (client color scheme)\\n    * Duplication (all the browsers all the radius corners)\\n    * Cascade (deeply nested)\\n    * Calculation (font size plus wha?)\\n    * Importing (double gross)\\n  * Compiles to CSS\\n    ]\\n\\n---\\n\\n## Bootstrap 3\\n\\n* Grid and Layout\\n*\\n\\n---\\n\\n## Challenge 3\\n\\n* Now add Bootstrap 3 to your movie favs page\\n* change the first card into a Jumbotron\\n* social card will now be buttons, tastfully placed and socially themed\\n* make your 3 movies into a col-md\\n* last card as a footer\\n* SCSS style use\\n* color theme, palette\\n*\\n\\n---\\n\"},\"fields\":{\"slug\":\"/courses/frontend-foundations/slides/css-overview/\"}}}]}},\"pathContext\":{\"slug\":\"/courses/frontend-foundations/slides/css-overview/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---courses-frontend-foundations-slides-css-overview-3ffecf07d256ff67eb54.js","module.exports = {\"data\":{\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"html\":\"<p>class: middle center</p>\\n<h2>HTML5</h2>\\n<p>.left[</p>\\n<ul>\\n<li>\\n<p>Review</p>\\n</li>\\n<li>\\n<p>Node: In the HTML Document Object Model (DOM), everything is a node.</p>\\n</li>\\n<li>\\n<p>Tag: The beginning of an HTML element, usually denoted with angle brackets\\nsurrounding a tag type. Ex: <p></p>\\n</li>\\n<li>\\n<p>Element: A distinct component of an HTML document, usually comprised of\\nstart and end tags surrounding some kind of content. Ex: <p></p></p>\\n</li>\\n<li>\\n<p>Attribute: Modifications to a given element.\\n]</p>\\n</li>\\n</ul>\\n<hr>\\n<p>class: middle left</p>\\n<ul>\\n<li>\\n<p>Navitgation</p>\\n<ul>\\n<li>Just Fancy styled Links</li>\\n</ul>\\n</li>\\n<li>\\n<p>Cross Browser</p>\\n<ul>\\n<li>GROSS</li>\\n<li>\\n<p>Friends don’t let friends support Internet Explorer 8</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code><!--[if lt IE 9]>\\nthe code here will only run if browser is older than IE 9\\n<![endif]--></code></pre>\\n      </div>\\n</li>\\n</ul>\\n</li>\\n</ul>\\n<hr>\\n<h2>CSS3 Review</h2>\\n<p>.left[</p>\\n<ul>\\n<li>\\n<p>Selectors</p>\\n</li>\\n<li>\\n<p>ID: denoted a hash symbol (#) #container { color:black }</p>\\n</li>\\n<li>\\n<p>Class: denoted by a period (.) .leftColumn { color:red }</p>\\n</li>\\n<li>\\n<p>Element: denoted by the tag name nav { height: 45px; width: 100%; }</p>\\n</li>\\n<li>\\n<p>States</p>\\n<ul>\\n<li>:link</li>\\n<li>:vistied</li>\\n<li>:hover</li>\\n<li>:active</li>\\n<li>:focus <a class=\\\"navlink\\\" href=\\\"#\\\">Home</a> a.navlink:hover { color: green;\\n}\\n]</li>\\n</ul>\\n</li>\\n</ul>\\n<hr>\\n<p>class: left</p>\\n<h3>Elements</h3>\\n<ul>\\n<li>\\n<p>::before</p>\\n<ul>\\n<li>adds content text or a shape before the HTML element is selected.</li>\\n</ul>\\n</li>\\n<li>\\n<p>::after</p>\\n<ul>\\n<li>adds content text or a shape after the HTML element is selected.</li>\\n</ul>\\n</li>\\n<li>::first-letter ::first-line</li>\\n</ul>\\n<hr>\\n<p>class: left</p>\\n<h3>Properties</h3>\\n<ul>\\n<li>margin</li>\\n<li>border</li>\\n<li>padding</li>\\n<li>font</li>\\n<li>background</li>\\n<li>\\n<p>display</p>\\n<ul>\\n<li>display: none</li>\\n<li>display: inline</li>\\n<li>display: block</li>\\n<li>visibility: hidden\\n<a href=\\\"https://resources.api.exeterlms.com/Resources/5cdb8f9b-3ac6-4ac7-93fe-83dd21bb5032\\\">LEARN ME</a></li>\\n</ul>\\n</li>\\n</ul>\\n<hr>\\n<ul>\\n<li>\\n<p>Position</p>\\n<ul>\\n<li>relative</li>\\n<li>absolute</li>\\n<li>fixed</li>\\n<li>top, right, bottom or left</li>\\n</ul>\\n</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>  <style>\\n    div {color:yellow; width:200px; height:50px; background:gray;}\\n  </style>\\n  <div>Some text here</div></code></pre>\\n      </div>\\n<hr>\\n<h2>Cassacading Inheritance</h2>\\n<ul>\\n<li>\\n<p><strong>Ordering</strong> - from least important to most</p>\\n<ol>\\n<li>\\n<p>Importance (!important) - Overuse of !important is not good.</p>\\n</li>\\n<li>\\n<p>Specificity :-/</p>\\n</li>\\n<li>\\n<p><a href=\\\"http://jsbin.com/nahovis/2/edit?html,css\\\">Sample</a></p>\\n</li>\\n<li>\\n<p>Source Order</p>\\n</li>\\n<li>\\n<p><a href=\\\"http://jsbin.com/pefuta/4/edit?html,css\\\">Sample</a></p>\\n</li>\\n<li>\\n<p>Inheritance</p>\\n</li>\\n<li>\\n<p><a href=\\\"http://jsbin.com/kiraseb/4/edit?html,css\\\">Sample</a></p>\\n</li>\\n</ol>\\n</li>\\n</ul>\\n<hr>\\n<h2><strong>Styling Fonts</strong></h2>\\n<p>.left[</p>\\n<ul>\\n<li>the web browser is going to rely on the user’s system</li>\\n<li><a href=\\\"http://www.ampsoft.net/webdesign-l/WindowsMacFonts.html\\\">Common Fonts</a></li>\\n<li>ems for relative font sizing</li>\\n<li>@font-face (Go get me some fonts!) * @font-face { font-family: roboto-thin; src:\\nurl(<a href=\\\"https://cdnjs.cloudflare.com/ajax/libs/ink/3.1.10/fonts/Roboto/roboto-thin-webfont.ttf\\\">https://cdnjs.cloudflare.com/ajax/libs/ink/3.1.10/fonts/Roboto/roboto-thin-webfont.ttf</a>);\\n}\\n]</li>\\n</ul>\\n<hr>\\n<h3>Challenge</h3>\\n<ul>\\n<li><a href=\\\"https://codepen.io/Jtomchak/pen/jwQNpW/?editors=1100\\\">BOOM</a></li>\\n<li><a href=\\\"https://upload.wikimedia.org/wikiversity/en/b/bd/Css1_1.png\\\">Make it look like</a></li>\\n</ul>\\n<hr>\\n<h2><strong>Media Queries</strong></h2>\\n<p>.left[</p>\\n<ul>\\n<li>in CSS3, we are able to target specific screen sizes.</li>\\n<li>used extensivly for ‘responsive design’</li>\\n<li>\\n<p>queries used</p>\\n<ul>\\n<li>width and height of the viewport</li>\\n<li>width and height of the device</li>\\n<li>orientation (is the tablet/phone in landscape or portrait mode?)</li>\\n<li>resolution</li>\\n<li>there is a pile, most used</li>\\n<li>width , min-width , max-width</li>\\n<li>height , min-height , max-height</li>\\n</ul>\\n</li>\\n<li>@media (max-width: 768px) and (orientation: portrait) { //these would only\\nto screens width 768 or less //like your mobile computing device }</li>\\n<li>\\n<p>viewport patch</p>\\n<ul>\\n<li>\\n<meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n</li>\\n</ul>\\n</li>\\n<li><a href=\\\"https://css-tricks.com/snippets/css/media-queries-for-standard-devices/\\\">ALL THE SIZES</a>\\n]</li>\\n</ul>\\n<hr>\\n<h2><strong>Style and Layout</strong></h2>\\n<p>.left[</p>\\n<ul>\\n<li>\\n<p>Position</p>\\n<ul>\\n<li>Static</li>\\n<li>stacks elements, the default</li>\\n<li>Relative</li>\\n<li>position in some direction</li>\\n<li>Absolute</li>\\n<li>position relative to the body of the document</li>\\n<li>Fixed * position on the page, not the document, stays even when scrolling\\n]</li>\\n</ul>\\n</li>\\n</ul>\\n<hr>\\n<h2><strong>Responsive versus adaptive</strong></h2>\\n<p>.left[</p>\\n<ul>\\n<li>\\n<p>responsive: respond to the size of the browser at any given point</p>\\n<ul>\\n<li>fluid and flexible</li>\\n</ul>\\n</li>\\n<li>adaptive: adaptive websites adapt to the width of the browser at a specific\\npoints. more like a snap too.</li>\\n<li><a href=\\\"https://cdn.css-tricks.com/wp-content/uploads/2015/11/rwd-vs-adapt-example.gif\\\">Animated Example</a></li>\\n<li><a href=\\\"https://www.fastcodesign.com/3038367/9-gifs-that-explain-responsive-design-brilliantly\\\">More Examples</a>\\n]</li>\\n</ul>\\n<hr>\\n<h2>Challenge 2</h2>\\n<ul>\\n<li><a href=\\\"https://codepen.io/Jtomchak/pen/OgaLGL/\\\">BOOM</a></li>\\n<li><a href=\\\"http://lewagon.github.io/html-css-challenges/03-box-model/\\\">Make it look like</a></li>\\n</ul>\\n<hr>\\n<h2><strong>Resources</strong></h2>\\n<p>.left[</p>\\n<ul>\\n<li><a href=\\\"https://www.smashingmagazine.com/mastering-css-principles-comprehensive-reference-guide/\\\">Super Guide</a></li>\\n<li><a href=\\\"https://www.simplilearn.com/css3-resources-ultimate-list-article\\\">Super Duper Guide</a></li>\\n<li>\\n<p>Pre-processors</p>\\n<ul>\\n<li>Less, Sass, Scss, Stylus, Css-Crush, Myth, Rework</li>\\n<li>Cool, but why?</li>\\n<li>Color (client color scheme)</li>\\n<li>Duplication (all the browsers all the radius corners)</li>\\n<li>Cascade (deeply nested)</li>\\n<li>Calculation (font size plus wha?)</li>\\n<li>Importing (double gross)</li>\\n<li>Compiles to CSS\\n]</li>\\n</ul>\\n</li>\\n</ul>\\n<hr>\\n<h2>Bootstrap 3</h2>\\n<ul>\\n<li>Grid and Layout</li>\\n<li>*</li>\\n</ul>\\n<hr>\\n<h2>Challenge 3</h2>\\n<ul>\\n<li>Now add Bootstrap 3 to your movie favs page</li>\\n<li>change the first card into a Jumbotron</li>\\n<li>social card will now be buttons, tastfully placed and socially themed</li>\\n<li>make your 3 movies into a col-md</li>\\n<li>last card as a footer</li>\\n<li>SCSS style use</li>\\n<li>color theme, palette</li>\\n<li>*</li>\\n</ul>\\n<hr>\",\"internal\":{\"content\":\"---\\ntitle: \\\"CSS Review\\\" \\ncourseId:  \\\"FSWG101\\\"\\ncirriculum: \\n  - \\\"Software Development\\\"\\ntype: \\\"slide\\\"\\ndraft: false\\n---\\n\\nclass: middle center\\n\\n## HTML5\\n\\n.left[\\n\\n* Review\\n\\n* Node: In the HTML Document Object Model (DOM), everything is a node.\\n* Tag: The beginning of an HTML element, usually denoted with angle brackets\\n  surrounding a tag type. Ex: <p>\\n* Element: A distinct component of an HTML document, usually comprised of\\n  start and end tags surrounding some kind of content. Ex: <p></p>\\n* Attribute: Modifications to a given element.\\n  ]\\n\\n---\\n\\nclass: middle left\\n\\n* Navitgation\\n  * Just Fancy styled Links\\n* Cross Browser\\n  * GROSS\\n  * Friends don't let friends support Internet Explorer 8\\n  ```\\n  <!--[if lt IE 9]>\\n  the code here will only run if browser is older than IE 9\\n  <![endif]-->\\n  ```\\n\\n---\\n\\n## CSS3 Review\\n\\n.left[\\n\\n* Selectors\\n\\n* ID: denoted a hash symbol (#) #container { color:black }\\n\\n* Class: denoted by a period (.) .leftColumn { color:red }\\n\\n* Element: denoted by the tag name nav { height: 45px; width: 100%; }\\n\\n* States\\n  * :link\\n  * :vistied\\n  * :hover\\n  * :active\\n  * :focus <a class=\\\"navlink\\\" href=\\\"#\\\">Home</a> a.navlink:hover { color: green;\\n    }\\n    ]\\n\\n---\\n\\nclass: left\\n\\n### Elements\\n\\n* ::before\\n  * adds content text or a shape before the HTML element is selected.\\n* ::after\\n  * adds content text or a shape after the HTML element is selected.\\n* ::first-letter ::first-line\\n\\n---\\n\\nclass: left\\n\\n### Properties\\n\\n* margin\\n* border\\n* padding\\n* font\\n* background\\n* display\\n  * display: none\\n  * display: inline\\n  * display: block\\n  * visibility: hidden\\n    [LEARN ME](https://resources.api.exeterlms.com/Resources/5cdb8f9b-3ac6-4ac7-93fe-83dd21bb5032)\\n\\n---\\n\\n* Position\\n  * relative\\n  * absolute\\n  * fixed\\n  * top, right, bottom or left\\n\\n```\\n  <style>\\n    div {color:yellow; width:200px; height:50px; background:gray;}\\n  </style>\\n  <div>Some text here</div>\\n```\\n\\n---\\n\\n## Cassacading Inheritance\\n\\n* **Ordering** - from least important to most\\n\\n  1. Importance (!important) - Overuse of !important is not good.\\n  2. Specificity :-/\\n     * [Sample](http://jsbin.com/nahovis/2/edit?html,css)\\n  3. Source Order\\n     * [Sample](http://jsbin.com/pefuta/4/edit?html,css)\\n\\n  * Inheritance\\n    * [Sample](http://jsbin.com/kiraseb/4/edit?html,css)\\n\\n---\\n\\n## **Styling Fonts**\\n\\n.left[\\n\\n* the web browser is going to rely on the user's system\\n* [Common Fonts](http://www.ampsoft.net/webdesign-l/WindowsMacFonts.html)\\n* ems for relative font sizing\\n* @font-face (Go get me some fonts!) \\\\* @font-face { font-family: roboto-thin; src:\\n  url(https://cdnjs.cloudflare.com/ajax/libs/ink/3.1.10/fonts/Roboto/roboto-thin-webfont.ttf);\\n  }\\n  ]\\n\\n---\\n\\n### Challenge\\n\\n* [BOOM](https://codepen.io/Jtomchak/pen/jwQNpW/?editors=1100)\\n* [Make it look like](https://upload.wikimedia.org/wikiversity/en/b/bd/Css1_1.png)\\n\\n---\\n\\n## **Media Queries**\\n\\n.left[\\n\\n* in CSS3, we are able to target specific screen sizes.\\n* used extensivly for 'responsive design'\\n* queries used\\n  * width and height of the viewport\\n  * width and height of the device\\n  * orientation (is the tablet/phone in landscape or portrait mode?)\\n  * resolution\\n  * there is a pile, most used\\n    1. width , min-width , max-width\\n    2. height , min-height , max-height\\n* @media (max-width: 768px) and (orientation: portrait) { //these would only\\n  to screens width 768 or less //like your mobile computing device }\\n* viewport patch\\n  * <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1.0\\\">\\n* [ALL THE SIZES](https://css-tricks.com/snippets/css/media-queries-for-standard-devices/)\\n  ]\\n\\n---\\n\\n## **Style and Layout**\\n\\n.left[\\n\\n* Position\\n  * Static\\n    * stacks elements, the default\\n  * Relative\\n    * position in some direction\\n  * Absolute\\n    * position relative to the body of the document\\n  * Fixed \\\\* position on the page, not the document, stays even when scrolling\\n    ]\\n\\n---\\n\\n## **Responsive versus adaptive**\\n\\n.left[\\n\\n* responsive: respond to the size of the browser at any given point\\n  * fluid and flexible\\n* adaptive: adaptive websites adapt to the width of the browser at a specific\\n  points. more like a snap too.\\n* [Animated Example](https://cdn.css-tricks.com/wp-content/uploads/2015/11/rwd-vs-adapt-example.gif)\\n* [More Examples](https://www.fastcodesign.com/3038367/9-gifs-that-explain-responsive-design-brilliantly)\\n  ]\\n\\n---\\n\\n## Challenge 2\\n\\n* [BOOM](https://codepen.io/Jtomchak/pen/OgaLGL/)\\n* [Make it look like](http://lewagon.github.io/html-css-challenges/03-box-model/)\\n\\n---\\n\\n## **Resources**\\n\\n.left[\\n\\n* [Super Guide](https://www.smashingmagazine.com/mastering-css-principles-comprehensive-reference-guide/)\\n* [Super Duper Guide](https://www.simplilearn.com/css3-resources-ultimate-list-article)\\n* Pre-processors\\n  * Less, Sass, Scss, Stylus, Css-Crush, Myth, Rework\\n  * Cool, but why?\\n    * Color (client color scheme)\\n    * Duplication (all the browsers all the radius corners)\\n    * Cascade (deeply nested)\\n    * Calculation (font size plus wha?)\\n    * Importing (double gross)\\n  * Compiles to CSS\\n    ]\\n\\n---\\n\\n## Bootstrap 3\\n\\n* Grid and Layout\\n*\\n\\n---\\n\\n## Challenge 3\\n\\n* Now add Bootstrap 3 to your movie favs page\\n* change the first card into a Jumbotron\\n* social card will now be buttons, tastfully placed and socially themed\\n* make your 3 movies into a col-md\\n* last card as a footer\\n* SCSS style use\\n* color theme, palette\\n*\\n\\n---\\n\"},\"fields\":{\"slug\":\"/courses/frontend-foundations/slides/css-overview/\"}}}]}},\"pathContext\":{\"slug\":\"/courses/frontend-foundations/slides/css-overview/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/courses-frontend-foundations-slides-css-overview.json\n// module id = 420\n// module chunks = 93318097395779"],"sourceRoot":""}