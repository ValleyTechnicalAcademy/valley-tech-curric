{"version":3,"sources":["webpack:///component---src-templates-course-js-adec5956183a1e82e3bd.js","webpack:///./src/templates/course.js"],"names":["webpackJsonp","241","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","queryCourseDetails","undefined","_react","_react2","_gatsbyLink","_gatsbyLink2","_ref","data","course","location","markdownRemark","matchingSlides","allMarkdownRemark","edges","filter","_ref2","node","frontmatter","type","courseId","createElement","title","className","to","fields","slug","map","_ref3","key","id","target","dangerouslySetInnerHTML","__html","html"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,EAASC,GAEhC,YAaA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAXvFH,EAAQI,YAAa,EACrBJ,EAAQM,mBAAqBC,MCR9B,IAAAC,GAAAP,EAAA,GDYKQ,EAAUP,EAAuBM,GCXtCE,EAAAT,EAAA,IDeKU,EAAeT,EAAuBQ,EAI1CV,GAAQK,QCjBM,SAAAO,GAAwB,GAArBC,GAAqBD,EAArBC,KACVC,GAD+BF,EAAfG,SACPF,EAAKG,gBAMdC,EAAiBJ,EAAKK,kBAAkBC,MAAMC,OAClD,SAAAC,GAAA,GAAGC,GAAHD,EAAGC,IAAH,OACE,UAAAA,EAAKC,YAAYC,MACjBV,EAAOS,YAAYE,WAAaH,EAAKC,YAAYE,UAErD,OACEhB,GAAAJ,QAAAqB,cAAA,WACEjB,EAAAJ,QAAAqB,cAAA,UAAKZ,EAAOS,YAAYI,OACxBlB,EAAAJ,QAAAqB,cAAA,OAAKE,UAAU,yBACbnB,EAAAJ,QAAAqB,cAAA,OAAKE,UAAU,kBACbnB,EAAAJ,QAAAqB,cAAAf,EAAAN,SAAMuB,UAAU,iBAAiBC,GAAOf,EAAOgB,OAAOC,KAArB,YAAjC,aAIFtB,EAAAJ,QAAAqB,cAAA,OAAKE,UAAU,kBACbnB,EAAAJ,QAAAqB,cAAA,OAAKE,UAAU,eAAf,UAECX,EAAee,IAAI,SAAAC,GAAc,GAAXX,GAAWW,EAAXX,IACrB,OACEb,GAAAJ,QAAAqB,cAAA,MAAIE,UAAU,cAAcM,IAAKZ,EAAKa,IACpC1B,EAAAJ,QAAAqB,cAAAf,EAAAN,SACEuB,UAAU,iBACVC,GAAIP,EAAKQ,OAAOC,KAChBK,OAAO,UAENd,EAAKC,YAAYI,YAO9BlB,EAAAJ,QAAAqB,cAAA,OAAKW,yBAA2BC,OAAQxB,EAAOyB,SAKxCjC","file":"component---src-templates-course-js-adec5956183a1e82e3bd.js","sourcesContent":["webpackJsonp([218389614627701],{\n\n/***/ 241:\n/***/ (function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\texports.__esModule = true;\n\texports.queryCourseDetails = undefined;\n\t\n\tvar _react = __webpack_require__(4);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _gatsbyLink = __webpack_require__(48);\n\t\n\tvar _gatsbyLink2 = _interopRequireDefault(_gatsbyLink);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = function (_ref) {\n\t  var data = _ref.data,\n\t      location = _ref.location;\n\t\n\t  var course = data.markdownRemark;\n\t\n\t  /*\n\t  Slide-List will only list those slides relevant to the given\n\t  course, based on the slide type && the slide courseId matching the page's courseId\n\t  */\n\t  var matchingSlides = data.allMarkdownRemark.edges.filter(function (_ref2) {\n\t    var node = _ref2.node;\n\t    return node.frontmatter.type === \"slide\" && course.frontmatter.courseId === node.frontmatter.courseId;\n\t  });\n\t  return _react2.default.createElement(\n\t    \"div\",\n\t    null,\n\t    _react2.default.createElement(\n\t      \"h1\",\n\t      null,\n\t      course.frontmatter.title\n\t    ),\n\t    _react2.default.createElement(\n\t      \"div\",\n\t      { className: \"course-item-container\" },\n\t      _react2.default.createElement(\n\t        \"div\",\n\t        { className: \"course-content\" },\n\t        _react2.default.createElement(\n\t          _gatsbyLink2.default,\n\t          { className: \"bracket-select\", to: course.fields.slug + \"syllabus\" },\n\t          \"Syllabus\"\n\t        )\n\t      ),\n\t      _react2.default.createElement(\n\t        \"div\",\n\t        { className: \"course-content\" },\n\t        _react2.default.createElement(\n\t          \"div\",\n\t          { className: \"slide-title\" },\n\t          \"Slides\"\n\t        ),\n\t        matchingSlides.map(function (_ref3) {\n\t          var node = _ref3.node;\n\t\n\t          return _react2.default.createElement(\n\t            \"li\",\n\t            { className: \"slides-list\", key: node.id },\n\t            _react2.default.createElement(\n\t              _gatsbyLink2.default,\n\t              {\n\t                className: \"bracket-select\",\n\t                to: node.fields.slug,\n\t                target: \"_blank\"\n\t              },\n\t              node.frontmatter.title\n\t            )\n\t          );\n\t        })\n\t      )\n\t    ),\n\t    _react2.default.createElement(\"div\", { dangerouslySetInnerHTML: { __html: course.html } })\n\t  );\n\t};\n\t\n\tvar queryCourseDetails = exports.queryCourseDetails = \"** extracted graphql fragment **\";\n\t\n\tvar slugify = function slugify(char) {\n\t  return char.toLowerCase().replace(/ /g, \"-\").replace(/[^\\w-]+/g, \"\");\n\t};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// component---src-templates-course-js-adec5956183a1e82e3bd.js","import React from \"react\";\nimport Link from \"gatsby-link\";\n\nexport default ({ data, location }) => {\n  const course = data.markdownRemark;\n\n  /*\n  Slide-List will only list those slides relevant to the given\n  course, based on the slide type && the slide courseId matching the page's courseId\n  */\n  const matchingSlides = data.allMarkdownRemark.edges.filter(\n    ({ node }) =>\n      node.frontmatter.type === `slide` &&\n      course.frontmatter.courseId === node.frontmatter.courseId\n  );\n  return (\n    <div>\n      <h1>{course.frontmatter.title}</h1>\n      <div className=\"course-item-container\">\n        <div className=\"course-content\">\n          <Link className=\"bracket-select\" to={`${course.fields.slug}syllabus`}>\n            Syllabus\n          </Link>\n        </div>\n        <div className=\"course-content\">\n          <div className=\"slide-title\">Slides</div>\n\n          {matchingSlides.map(({ node }) => {\n            return (\n              <li className=\"slides-list\" key={node.id}>\n                <Link\n                  className=\"bracket-select\"\n                  to={node.fields.slug}\n                  target=\"_blank\"\n                >\n                  {node.frontmatter.title}\n                </Link>\n              </li>\n            );\n          })}\n        </div>\n      </div>\n      <div dangerouslySetInnerHTML={{ __html: course.html }} />\n    </div>\n  );\n};\n\nexport const queryCourseDetails = graphql`\n  query CourseQuery($courseId: String!, $slug: String) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        cirriculum\n        type\n        courseId\n      }\n      fields {\n        slug\n      }\n    }\n    allMarkdownRemark(\n      filter: { frontmatter: { courseId: { eq: $courseId } } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            courseId\n            type\n            title\n          }\n          fields {\n            slug\n            cirriculumPrefix\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst slugify = char =>\n  char\n    .toLowerCase()\n    .replace(/ /g, \"-\")\n    .replace(/[^\\w-]+/g, \"\");\n\n\n\n// WEBPACK FOOTER //\n// ./src/templates/course.js"],"sourceRoot":""}