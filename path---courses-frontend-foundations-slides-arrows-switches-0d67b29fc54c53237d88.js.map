{"version":3,"sources":["webpack:///path---courses-frontend-foundations-slides-arrows-switches-0d67b29fc54c53237d88.js","webpack:///./.cache/json/courses-frontend-foundations-slides-arrows-switches.json"],"names":["webpackJsonp","404","module","exports","data","allMarkdownRemark","edges","node","html","internal","content","fields","slug","pathContext"],"mappings":"AAAAA,cAAc,gBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,mBAAqBC,QAAUC,MAAQC,KAAA,s3rBAAmlsBC,UAAonBC,QAAA,ozLAA6zLC,QAAWC,KAAA,8DAAoEC,aAAgBD,KAAA","file":"path---courses-frontend-foundations-slides-arrows-switches-0d67b29fc54c53237d88.js","sourcesContent":["webpackJsonp([11397749705369],{\n\n/***/ 404:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"html\":\"<p>class: middle center</p>\\n<h1>Another Day, Another App</h1>\\n<p><img src=\\\"https://i.redditmedia.com/oO43xM8JgPj6X78Fa7VlXFJOZZ72ohriyGKvufy-RPM.jpg?s=9ae562048c03a6f0115d2ebe9f0362bf\\\"></p>\\n<hr>\\n<p>class: middle center</p>\\n<h2>Lets use JSBin, It tracks errors</h2>\\n<h4><a href=\\\"http://jsbin.com/?js,console\\\">http://jsbin.com/?js,console</a></h4>\\n<hr>\\n<p>class: middle center</p>\\n<h2>Morning Warmup #1</h2>\\n<ul>\\n<li><a href=\\\"http://jsbin.com/zemivit/edit?js,console\\\">http://jsbin.com/zemivit/edit?js,console</a>\\n???</li>\\n<li>\\n<h2>Warmup (1)</h2>\\n<p>class: middle center</p>\\n<h2>Arrow Functions</h2>\\n</li>\\n</ul>\\n<p>The ES6 Way of Writing Functions</p>\\n<hr>\\n<p>class: middle center</p>\\n<h2>Arrow Functions</h2>\\n<p>Arrow Functions are the alternative way to write functions.</p>\\n<p>They save time with shorter syntax.</p>\\n<hr>\\n<h2>Arrow Functions</h2>\\n<h3>REGULAR Function</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">myFunction</span><span class=\\\"token punctuation\\\">(</span>param1<span class=\\\"token punctuation\\\">,</span> param2<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> param1 <span class=\\\"token operator\\\">+</span> param2<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">myFunction</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h3>ARROW Function</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">addFunction</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>param1<span class=\\\"token punctuation\\\">,</span> param2<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> param1 <span class=\\\"token operator\\\">+</span> param2<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">addFunction</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<p>class: middle center</p>\\n<h1>Implicit Return</h1>\\n<p> Cool for 1-liners of code </p>\\n<hr>\\n<h3>Arrow Functions - Implicit Return</h3>\\n<h5>Example 1</h5>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">addFunction</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>param1<span class=\\\"token punctuation\\\">,</span> param2<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> param1 <span class=\\\"token operator\\\">+</span> param2<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">addFunction</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h5>Example 2</h5>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">stringFunction</span> <span class=\\\"token operator\\\">=</span> string <span class=\\\"token operator\\\">=></span> string <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">'!'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">stringFunction</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'My name is Hermione'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<h2>No Parameters? No Problem</h2>\\n<h3>Regular Function</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">hello</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Hello World!'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3>Arrow Function with 0 Parameters</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">hello</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Hello World!'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<p>class: middle center</p>\\n<h1>Your Turn! #2</h1>\\n<ul>\\n<li>\\n<p><a href=\\\"http://jsbin.com/bobedo/edit?js,console\\\">http://jsbin.com/bobedo/edit?js,console</a>\\n???\\nEXERCISE Arrow functions (1)</p>\\n<hr>\\n<h2>Arrow Functions - Default Parameters</h2>\\n</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">defParam</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">,</span> b <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> a <span class=\\\"token operator\\\">*</span> b<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">defParam</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<p>class: middle center</p>\\n<h2>Switch Statements</h2>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/800/1*1APKslCDoGX0ho-klL5PbQ.png\\\"></p>\\n<hr>\\n<p>class: middle center</p>\\n<h2>Switch Statements</h2>\\n<p>Similar to IF/ELSE statements. Has a different syntax that is easier to write\\nin some situations</p>\\n<hr>\\n<h2>Switch Statements</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>expression<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">case</span> value1<span class=\\\"token punctuation\\\">:</span>\\n    statement1<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">case</span> value2<span class=\\\"token punctuation\\\">:</span>\\n    statement2<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">case</span> value3<span class=\\\"token punctuation\\\">:</span>\\n    statement3<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span>\\n    defaultStatement<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<h2>Switch Statements</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">let</span> day <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> dayName<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>day<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">:</span>\\n    dayName <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'Sunday'</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">:</span>\\n    dayName <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'Monday'</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">:</span>\\n    dayName <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'Tuesday'</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">:</span>\\n    dayName <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'Wednesday'</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">:</span>\\n    dayName <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'Thursday'</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">6</span><span class=\\\"token punctuation\\\">:</span>\\n    dayName <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'Friday'</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">7</span><span class=\\\"token punctuation\\\">:</span>\\n    dayName <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'Saturday'</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span>\\n    dayName <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'Invalid day'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>dayName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<p>class: middle center</p>\\n<h1>Your Turn #3</h1>\\n<ul>\\n<li>\\n<p><a href=\\\"http://jsbin.com/ferejed/edit?js,console\\\">http://jsbin.com/ferejed/edit?js,console</a>\\n???\\nEXERCISE Switch Statement</p>\\n<hr>\\n<p>class: middle center</p>\\n<h2>Try Catches</h2>\\n</li>\\n<li>\\n<h2>This will save your ass.</h2>\\n<p>class: middle center</p>\\n<h2>Try Catches</h2>\\n</li>\\n</ul>\\n<p>Try Catches are our safeguards as developers to prevent an error from\\nappearing for a user. In case our code breaks, we can hide it or minimize\\nthe \\\"damage\\\".</p>\\n<hr>\\n<h2>Try Catches</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// code block goes here</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">err</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// error handling</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<h2>Try Catches</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Start of try block'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// #1 This line executes</span>\\n\\n  randomVariable<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// error, variable is not defined!</span>\\n\\n  <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'End of try (never reached)'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// #2 This line is never reached</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">err</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Error has occurred!'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// #3 This is line executed since an error has occurred.</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'...Then the execution continues'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// #4 Finally, this is executed.</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<p>class: middle center</p>\\n<h2>Your Turn #4</h2>\\n<ul>\\n<li><a href=\\\"http://jsbin.com/xisuhiw/edit?js,console\\\">http://jsbin.com/xisuhiw/edit?js,console</a></li>\\n</ul>\\n<p>???\\nEXERCISE Try/Catch</p>\\n<hr>\\n<h2>Try Catch FINALLY</h2>\\n<p>Another component of Try/Catch</p>\\n<hr>\\n<h2>Try Catch FINALLY</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// Block of code to try</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">err</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// Block of code to handle errors</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">finally</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// Block of code to be executed regardless of the try..catch result</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<h2>Try Catch FINALLY</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">myFunction</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">let</span> message <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"message\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    message<span class=\\\"token punctuation\\\">.</span>innerHTML <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">let</span> x <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"demo\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>x <span class=\\\"token operator\\\">==</span> <span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token string\\\">\\\"Please input a number\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>x <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token string\\\">\\\"Your number is too low!\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>x <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">25</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token string\\\">\\\"Your number is too high!\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">catch</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        message<span class=\\\"token punctuation\\\">.</span>innerHTML <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"Input \\\"</span> <span class=\\\"token operator\\\">+</span> err<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">finally</span> <span class=\\\"token punctuation\\\">{</span>\\n        document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"demo\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>value <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<p>class: middle center</p>\\n<h1>Your Turn #5</h1>\\n<ul>\\n<li>\\n<p><a href=\\\"http://jsbin.com/xulefuh/edit?js,console\\\">http://jsbin.com/xulefuh/edit?js,console</a>\\n???\\nEXERCISE TRY/CATCH/FINALLY - Throw</p>\\n<hr>\\n<p>class: middle center</p>\\n<h2>Ternary Operator</h2>\\n</li>\\n</ul>\\n<p>Shorthand IF/ELSE Statement</p>\\n<hr>\\n<h2>Ternary Operator</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>condition <span class=\\\"token operator\\\">?</span> expression on <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">:</span> expression on <span class=\\\"token boolean\\\">false</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<h2>Ternary Operator</h2>\\n<h2>TRADITIONAL IF/ELSE</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">let</span> age <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">17</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>age <span class=\\\"token operator\\\">>=</span> <span class=\\\"token number\\\">18</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Welcome to our site.'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Sorry, you must be 18 or older to enter'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h2>TERNARY</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">let</span> age <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">17</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> isOldEnough <span class=\\\"token operator\\\">=</span> age <span class=\\\"token operator\\\">>=</span> <span class=\\\"token number\\\">18</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">'Welcome to our site.'</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Sorry; you must be 18 or older to enter.'</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<p>class: middle center</p>\\n<h1>Your Turn! #6</h1>\\n<ul>\\n<li><a href=\\\"http://jsbin.com/vesayer/edit?js,console\\\">http://jsbin.com/vesayer/edit?js,console</a></li>\\n</ul>\\n<p>???\\nEXERCISE TERNARY</p>\\n<hr>\\n<p>class: middle center</p>\\n<h2>Some More Practice</h2>\\n<ul>\\n<li><a href=\\\"http://jsbin.com/pigopin/edit?js,console\\\">http://jsbin.com/pigopin/edit?js,console</a></li>\\n</ul>\\n<hr>\\n<p>class: middle center</p>\\n<h2>If We Have Time…</h2>\\n<ul>\\n<li><a href=\\\"http://jsbin.com/dunefid/edit?js,console\\\">http://jsbin.com/dunefid/edit?js,console</a></li>\\n</ul>\",\"internal\":{\"content\":\"---\\ntitle: \\\"Arrow Functions, Switches, Try/Catch/Finally\\\"\\ncourseId:  \\\"FSWG101\\\"\\ncirriculum:\\n  - \\\"Web / Full Stack / Software Development\\\"\\ntype: \\\"slide\\\"\\ndraft: false\\n---\\nclass: middle center\\n\\n# Another Day, Another App\\n\\n![](https://i.redditmedia.com/oO43xM8JgPj6X78Fa7VlXFJOZZ72ohriyGKvufy-RPM.jpg?s=9ae562048c03a6f0115d2ebe9f0362bf)\\n\\n---\\nclass: middle center\\n## Lets use JSBin, It tracks errors\\n\\n#### http://jsbin.com/?js,console\\n---\\nclass: middle center\\n\\n## Morning Warmup #1\\n\\n* http://jsbin.com/zemivit/edit?js,console\\n???\\n- Warmup (1)\\n---\\nclass: middle center\\n## Arrow Functions\\n\\n<p>The ES6 Way of Writing Functions</p>\\n\\n---\\nclass: middle center\\n## Arrow Functions\\n\\n<p>Arrow Functions are the alternative way to write functions.</p>\\n\\n<p>They save time with shorter syntax.</p>\\n\\n---\\n## Arrow Functions\\n\\n### REGULAR Function\\n```javascript\\nfunction myFunction(param1, param2) {\\n  return param1 + param2;\\n}\\n\\nmyFunction(2, 4);\\n```\\n\\n### ARROW Function\\n```javascript\\nconst addFunction = (param1, param2) => {\\n  return param1 + param2;\\n};\\n\\naddFunction(2, 4);\\n```\\n---\\nclass: middle center\\n# Implicit Return\\n\\n<p> Cool for 1-liners of code </p>\\n\\n---\\n### Arrow Functions - Implicit Return\\n\\n##### Example 1\\n```javascript\\nconst addFunction = (param1, param2) => param1 + param2;\\n\\naddFunction(2, 4);\\n```\\n\\n##### Example 2\\n```javascript\\nconst stringFunction = string => string + '!';\\n\\nstringFunction('My name is Hermione');\\n```\\n---\\n## No Parameters? No Problem\\n\\n### Regular Function\\n```javascript\\nfunction hello() {\\n  console.log('Hello World!');\\n}\\n```\\n\\n### Arrow Function with 0 Parameters\\n```javascript\\nconst hello = () => console.log('Hello World!');\\n```\\n\\n---\\nclass: middle center\\n# Your Turn! #2\\n\\n* http://jsbin.com/bobedo/edit?js,console\\n???\\nEXERCISE Arrow functions (1)\\n---\\n## Arrow Functions - Default Parameters\\n\\n```javascript\\nconst defParam = (a, b = 20) => a * b;\\n\\ndefParam(10);\\n```\\n---\\nclass: middle center\\n## Switch Statements\\n\\n![](https://cdn-images-1.medium.com/max/800/1*1APKslCDoGX0ho-klL5PbQ.png)\\n\\n---\\nclass: middle center\\n## Switch Statements\\n\\n<p>Similar to IF/ELSE statements. Has a different syntax that is easier to write\\nin some situations</p>\\n\\n---\\n## Switch Statements\\n\\n```javascript\\nswitch (expression) {\\n  case value1:\\n    statement1;\\n    break;\\n  case value2:\\n    statement2;\\n    break;\\n  case value3:\\n    statement3;\\n    break;\\n  default:\\n    defaultStatement;\\n}\\n```\\n---\\n\\n## Switch Statements\\n```javascript\\nlet day = 4;\\nlet dayName;\\nswitch (day) {\\n  case 1:\\n    dayName = 'Sunday';\\n    break;\\n  case 2:\\n    dayName = 'Monday';\\n    break;\\n  case 3:\\n    dayName = 'Tuesday';\\n    break;\\n  case 4:\\n    dayName = 'Wednesday';\\n    break;\\n  case 5:\\n    dayName = 'Thursday';\\n    break;\\n  case 6:\\n    dayName = 'Friday';\\n    break;\\n  case 7:\\n    dayName = 'Saturday';\\n    break;\\n  default:\\n    dayName = 'Invalid day';\\n}\\nconsole.log(dayName);\\n```\\n---\\nclass: middle center\\n# Your Turn #3\\n\\n* http://jsbin.com/ferejed/edit?js,console\\n???\\nEXERCISE Switch Statement\\n---\\nclass: middle center\\n## Try Catches\\n\\n* This will save your ass.\\n---\\nclass: middle center\\n## Try Catches\\n\\n<p>Try Catches are our safeguards as developers to prevent an error from\\nappearing for a user. In case our code breaks, we can hide it or minimize\\nthe \\\"damage\\\".</p>\\n\\n---\\n## Try Catches\\n\\n```javascript\\ntry {\\n  // code block goes here\\n} catch (err) {\\n  // error handling\\n}\\n```\\n---\\n## Try Catches\\n\\n```javascript\\ntry {\\n  alert('Start of try block'); // #1 This line executes\\n\\n  randomVariable; // error, variable is not defined!\\n\\n  alert('End of try (never reached)'); // #2 This line is never reached\\n} catch (err) {\\n  alert('Error has occurred!'); // #3 This is line executed since an error has occurred.\\n}\\n\\nalert('...Then the execution continues'); // #4 Finally, this is executed.\\n```\\n---\\nclass: middle center\\n## Your Turn #4\\n\\n* http://jsbin.com/xisuhiw/edit?js,console\\n\\n???\\nEXERCISE Try/Catch\\n---\\n## Try Catch FINALLY\\n\\n<p>Another component of Try/Catch</p>\\n\\n---\\n## Try Catch FINALLY\\n\\n```javascript\\ntry {\\n  // Block of code to try\\n} catch (err) {\\n  // Block of code to handle errors\\n} finally {\\n  // Block of code to be executed regardless of the try..catch result\\n}\\n```\\n---\\n## Try Catch FINALLY\\n```javascript\\nfunction myFunction() {\\n    let message = document.getElementById(\\\"message\\\");\\n    message.innerHTML = \\\"\\\";\\n    let x = document.getElementById(\\\"demo\\\").value;\\n    try {\\n        if(x == \\\"\\\") throw \\\"Please input a number\\\";\\n        if(x < 10) throw \\\"Your number is too low!\\\";\\n        if(x > 25) throw \\\"Your number is too high!\\\";\\n    }\\n    catch(err) {\\n        message.innerHTML = \\\"Input \\\" + err;\\n    }\\n    finally {\\n        document.getElementById(\\\"demo\\\").value = \\\"\\\";\\n    }\\n}\\n```\\n---\\nclass: middle center\\n# Your Turn #5\\n\\n* http://jsbin.com/xulefuh/edit?js,console\\n???\\nEXERCISE TRY/CATCH/FINALLY - Throw\\n---\\nclass: middle center\\n## Ternary Operator\\n\\n<p>Shorthand IF/ELSE Statement</p>\\n\\n---\\n## Ternary Operator\\n```javascript\\ncondition ? expression on true : expression on false\\n```\\n---\\n## Ternary Operator\\n\\n## TRADITIONAL IF/ELSE\\n```javascript\\nlet age = 17;\\n\\nif (age >= 18) {\\n  ('Welcome to our site.');\\n} else {\\n  ('Sorry, you must be 18 or older to enter');\\n}\\n```\\n\\n## TERNARY\\n```javascript\\nlet age = 17;\\n\\nconst isOldEnough = age >= 18 ? 'Welcome to our site.' : 'Sorry; you must be 18 or older to enter.';\\n```\\n---\\nclass: middle center\\n\\n# Your Turn! #6\\n\\n* http://jsbin.com/vesayer/edit?js,console\\n\\n???\\nEXERCISE TERNARY\\n\\n---\\nclass: middle center\\n## Some More Practice\\n\\n* http://jsbin.com/pigopin/edit?js,console\\n\\n---\\nclass: middle center\\n## If We Have Time...\\n\\n* http://jsbin.com/dunefid/edit?js,console\\n\"},\"fields\":{\"slug\":\"/courses/frontend-foundations/slides/arrows_switches/\"}}}]}},\"pathContext\":{\"slug\":\"/courses/frontend-foundations/slides/arrows_switches/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---courses-frontend-foundations-slides-arrows-switches-0d67b29fc54c53237d88.js","module.exports = {\"data\":{\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"html\":\"<p>class: middle center</p>\\n<h1>Another Day, Another App</h1>\\n<p><img src=\\\"https://i.redditmedia.com/oO43xM8JgPj6X78Fa7VlXFJOZZ72ohriyGKvufy-RPM.jpg?s=9ae562048c03a6f0115d2ebe9f0362bf\\\"></p>\\n<hr>\\n<p>class: middle center</p>\\n<h2>Lets use JSBin, It tracks errors</h2>\\n<h4><a href=\\\"http://jsbin.com/?js,console\\\">http://jsbin.com/?js,console</a></h4>\\n<hr>\\n<p>class: middle center</p>\\n<h2>Morning Warmup #1</h2>\\n<ul>\\n<li><a href=\\\"http://jsbin.com/zemivit/edit?js,console\\\">http://jsbin.com/zemivit/edit?js,console</a>\\n???</li>\\n<li>\\n<h2>Warmup (1)</h2>\\n<p>class: middle center</p>\\n<h2>Arrow Functions</h2>\\n</li>\\n</ul>\\n<p>The ES6 Way of Writing Functions</p>\\n<hr>\\n<p>class: middle center</p>\\n<h2>Arrow Functions</h2>\\n<p>Arrow Functions are the alternative way to write functions.</p>\\n<p>They save time with shorter syntax.</p>\\n<hr>\\n<h2>Arrow Functions</h2>\\n<h3>REGULAR Function</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">myFunction</span><span class=\\\"token punctuation\\\">(</span>param1<span class=\\\"token punctuation\\\">,</span> param2<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> param1 <span class=\\\"token operator\\\">+</span> param2<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">myFunction</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h3>ARROW Function</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">addFunction</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>param1<span class=\\\"token punctuation\\\">,</span> param2<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> param1 <span class=\\\"token operator\\\">+</span> param2<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">addFunction</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<p>class: middle center</p>\\n<h1>Implicit Return</h1>\\n<p> Cool for 1-liners of code </p>\\n<hr>\\n<h3>Arrow Functions - Implicit Return</h3>\\n<h5>Example 1</h5>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">addFunction</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>param1<span class=\\\"token punctuation\\\">,</span> param2<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> param1 <span class=\\\"token operator\\\">+</span> param2<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">addFunction</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<h5>Example 2</h5>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">stringFunction</span> <span class=\\\"token operator\\\">=</span> string <span class=\\\"token operator\\\">=></span> string <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">'!'</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">stringFunction</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'My name is Hermione'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<h2>No Parameters? No Problem</h2>\\n<h3>Regular Function</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">hello</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Hello World!'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h3>Arrow Function with 0 Parameters</h3>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">hello</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Hello World!'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<p>class: middle center</p>\\n<h1>Your Turn! #2</h1>\\n<ul>\\n<li>\\n<p><a href=\\\"http://jsbin.com/bobedo/edit?js,console\\\">http://jsbin.com/bobedo/edit?js,console</a>\\n???\\nEXERCISE Arrow functions (1)</p>\\n<hr>\\n<h2>Arrow Functions - Default Parameters</h2>\\n</li>\\n</ul>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">const</span> <span class=\\\"token function-variable function\\\">defParam</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">(</span>a<span class=\\\"token punctuation\\\">,</span> b <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">20</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> a <span class=\\\"token operator\\\">*</span> b<span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">defParam</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<p>class: middle center</p>\\n<h2>Switch Statements</h2>\\n<p><img src=\\\"https://cdn-images-1.medium.com/max/800/1*1APKslCDoGX0ho-klL5PbQ.png\\\"></p>\\n<hr>\\n<p>class: middle center</p>\\n<h2>Switch Statements</h2>\\n<p>Similar to IF/ELSE statements. Has a different syntax that is easier to write\\nin some situations</p>\\n<hr>\\n<h2>Switch Statements</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>expression<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">case</span> value1<span class=\\\"token punctuation\\\">:</span>\\n    statement1<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">case</span> value2<span class=\\\"token punctuation\\\">:</span>\\n    statement2<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">case</span> value3<span class=\\\"token punctuation\\\">:</span>\\n    statement3<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span>\\n    defaultStatement<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<h2>Switch Statements</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">let</span> day <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">let</span> dayName<span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token keyword\\\">switch</span> <span class=\\\"token punctuation\\\">(</span>day<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">:</span>\\n    dayName <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'Sunday'</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">2</span><span class=\\\"token punctuation\\\">:</span>\\n    dayName <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'Monday'</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">3</span><span class=\\\"token punctuation\\\">:</span>\\n    dayName <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'Tuesday'</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">4</span><span class=\\\"token punctuation\\\">:</span>\\n    dayName <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'Wednesday'</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">5</span><span class=\\\"token punctuation\\\">:</span>\\n    dayName <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'Thursday'</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">6</span><span class=\\\"token punctuation\\\">:</span>\\n    dayName <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'Friday'</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">case</span> <span class=\\\"token number\\\">7</span><span class=\\\"token punctuation\\\">:</span>\\n    dayName <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'Saturday'</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">break</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token keyword\\\">default</span><span class=\\\"token punctuation\\\">:</span>\\n    dayName <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">'Invalid day'</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>dayName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<p>class: middle center</p>\\n<h1>Your Turn #3</h1>\\n<ul>\\n<li>\\n<p><a href=\\\"http://jsbin.com/ferejed/edit?js,console\\\">http://jsbin.com/ferejed/edit?js,console</a>\\n???\\nEXERCISE Switch Statement</p>\\n<hr>\\n<p>class: middle center</p>\\n<h2>Try Catches</h2>\\n</li>\\n<li>\\n<h2>This will save your ass.</h2>\\n<p>class: middle center</p>\\n<h2>Try Catches</h2>\\n</li>\\n</ul>\\n<p>Try Catches are our safeguards as developers to prevent an error from\\nappearing for a user. In case our code breaks, we can hide it or minimize\\nthe \\\"damage\\\".</p>\\n<hr>\\n<h2>Try Catches</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// code block goes here</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">err</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// error handling</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<h2>Try Catches</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Start of try block'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// #1 This line executes</span>\\n\\n  randomVariable<span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// error, variable is not defined!</span>\\n\\n  <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'End of try (never reached)'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// #2 This line is never reached</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">err</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Error has occurred!'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// #3 This is line executed since an error has occurred.</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'...Then the execution continues'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// #4 Finally, this is executed.</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<p>class: middle center</p>\\n<h2>Your Turn #4</h2>\\n<ul>\\n<li><a href=\\\"http://jsbin.com/xisuhiw/edit?js,console\\\">http://jsbin.com/xisuhiw/edit?js,console</a></li>\\n</ul>\\n<p>???\\nEXERCISE Try/Catch</p>\\n<hr>\\n<h2>Try Catch FINALLY</h2>\\n<p>Another component of Try/Catch</p>\\n<hr>\\n<h2>Try Catch FINALLY</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// Block of code to try</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token class-name\\\">err</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// Block of code to handle errors</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">finally</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// Block of code to be executed regardless of the try..catch result</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<h2>Try Catch FINALLY</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">myFunction</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">let</span> message <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"message\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    message<span class=\\\"token punctuation\\\">.</span>innerHTML <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">let</span> x <span class=\\\"token operator\\\">=</span> document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"demo\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>value<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>x <span class=\\\"token operator\\\">==</span> <span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token string\\\">\\\"Please input a number\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>x <span class=\\\"token operator\\\">&lt;</span> <span class=\\\"token number\\\">10</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token string\\\">\\\"Your number is too low!\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token keyword\\\">if</span><span class=\\\"token punctuation\\\">(</span>x <span class=\\\"token operator\\\">></span> <span class=\\\"token number\\\">25</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token keyword\\\">throw</span> <span class=\\\"token string\\\">\\\"Your number is too high!\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">catch</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        message<span class=\\\"token punctuation\\\">.</span>innerHTML <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"Input \\\"</span> <span class=\\\"token operator\\\">+</span> err<span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n    <span class=\\\"token keyword\\\">finally</span> <span class=\\\"token punctuation\\\">{</span>\\n        document<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">getElementById</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"demo\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span>value <span class=\\\"token operator\\\">=</span> <span class=\\\"token string\\\">\\\"\\\"</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<p>class: middle center</p>\\n<h1>Your Turn #5</h1>\\n<ul>\\n<li>\\n<p><a href=\\\"http://jsbin.com/xulefuh/edit?js,console\\\">http://jsbin.com/xulefuh/edit?js,console</a>\\n???\\nEXERCISE TRY/CATCH/FINALLY - Throw</p>\\n<hr>\\n<p>class: middle center</p>\\n<h2>Ternary Operator</h2>\\n</li>\\n</ul>\\n<p>Shorthand IF/ELSE Statement</p>\\n<hr>\\n<h2>Ternary Operator</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>condition <span class=\\\"token operator\\\">?</span> expression on <span class=\\\"token boolean\\\">true</span> <span class=\\\"token punctuation\\\">:</span> expression on <span class=\\\"token boolean\\\">false</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<h2>Ternary Operator</h2>\\n<h2>TRADITIONAL IF/ELSE</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">let</span> age <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">17</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>age <span class=\\\"token operator\\\">>=</span> <span class=\\\"token number\\\">18</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Welcome to our site.'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'Sorry, you must be 18 or older to enter'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<h2>TERNARY</h2>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">let</span> age <span class=\\\"token operator\\\">=</span> <span class=\\\"token number\\\">17</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token keyword\\\">const</span> isOldEnough <span class=\\\"token operator\\\">=</span> age <span class=\\\"token operator\\\">>=</span> <span class=\\\"token number\\\">18</span> <span class=\\\"token operator\\\">?</span> <span class=\\\"token string\\\">'Welcome to our site.'</span> <span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">'Sorry; you must be 18 or older to enter.'</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<p>class: middle center</p>\\n<h1>Your Turn! #6</h1>\\n<ul>\\n<li><a href=\\\"http://jsbin.com/vesayer/edit?js,console\\\">http://jsbin.com/vesayer/edit?js,console</a></li>\\n</ul>\\n<p>???\\nEXERCISE TERNARY</p>\\n<hr>\\n<p>class: middle center</p>\\n<h2>Some More Practice</h2>\\n<ul>\\n<li><a href=\\\"http://jsbin.com/pigopin/edit?js,console\\\">http://jsbin.com/pigopin/edit?js,console</a></li>\\n</ul>\\n<hr>\\n<p>class: middle center</p>\\n<h2>If We Have Time…</h2>\\n<ul>\\n<li><a href=\\\"http://jsbin.com/dunefid/edit?js,console\\\">http://jsbin.com/dunefid/edit?js,console</a></li>\\n</ul>\",\"internal\":{\"content\":\"---\\ntitle: \\\"Arrow Functions, Switches, Try/Catch/Finally\\\"\\ncourseId:  \\\"FSWG101\\\"\\ncirriculum:\\n  - \\\"Web / Full Stack / Software Development\\\"\\ntype: \\\"slide\\\"\\ndraft: false\\n---\\nclass: middle center\\n\\n# Another Day, Another App\\n\\n![](https://i.redditmedia.com/oO43xM8JgPj6X78Fa7VlXFJOZZ72ohriyGKvufy-RPM.jpg?s=9ae562048c03a6f0115d2ebe9f0362bf)\\n\\n---\\nclass: middle center\\n## Lets use JSBin, It tracks errors\\n\\n#### http://jsbin.com/?js,console\\n---\\nclass: middle center\\n\\n## Morning Warmup #1\\n\\n* http://jsbin.com/zemivit/edit?js,console\\n???\\n- Warmup (1)\\n---\\nclass: middle center\\n## Arrow Functions\\n\\n<p>The ES6 Way of Writing Functions</p>\\n\\n---\\nclass: middle center\\n## Arrow Functions\\n\\n<p>Arrow Functions are the alternative way to write functions.</p>\\n\\n<p>They save time with shorter syntax.</p>\\n\\n---\\n## Arrow Functions\\n\\n### REGULAR Function\\n```javascript\\nfunction myFunction(param1, param2) {\\n  return param1 + param2;\\n}\\n\\nmyFunction(2, 4);\\n```\\n\\n### ARROW Function\\n```javascript\\nconst addFunction = (param1, param2) => {\\n  return param1 + param2;\\n};\\n\\naddFunction(2, 4);\\n```\\n---\\nclass: middle center\\n# Implicit Return\\n\\n<p> Cool for 1-liners of code </p>\\n\\n---\\n### Arrow Functions - Implicit Return\\n\\n##### Example 1\\n```javascript\\nconst addFunction = (param1, param2) => param1 + param2;\\n\\naddFunction(2, 4);\\n```\\n\\n##### Example 2\\n```javascript\\nconst stringFunction = string => string + '!';\\n\\nstringFunction('My name is Hermione');\\n```\\n---\\n## No Parameters? No Problem\\n\\n### Regular Function\\n```javascript\\nfunction hello() {\\n  console.log('Hello World!');\\n}\\n```\\n\\n### Arrow Function with 0 Parameters\\n```javascript\\nconst hello = () => console.log('Hello World!');\\n```\\n\\n---\\nclass: middle center\\n# Your Turn! #2\\n\\n* http://jsbin.com/bobedo/edit?js,console\\n???\\nEXERCISE Arrow functions (1)\\n---\\n## Arrow Functions - Default Parameters\\n\\n```javascript\\nconst defParam = (a, b = 20) => a * b;\\n\\ndefParam(10);\\n```\\n---\\nclass: middle center\\n## Switch Statements\\n\\n![](https://cdn-images-1.medium.com/max/800/1*1APKslCDoGX0ho-klL5PbQ.png)\\n\\n---\\nclass: middle center\\n## Switch Statements\\n\\n<p>Similar to IF/ELSE statements. Has a different syntax that is easier to write\\nin some situations</p>\\n\\n---\\n## Switch Statements\\n\\n```javascript\\nswitch (expression) {\\n  case value1:\\n    statement1;\\n    break;\\n  case value2:\\n    statement2;\\n    break;\\n  case value3:\\n    statement3;\\n    break;\\n  default:\\n    defaultStatement;\\n}\\n```\\n---\\n\\n## Switch Statements\\n```javascript\\nlet day = 4;\\nlet dayName;\\nswitch (day) {\\n  case 1:\\n    dayName = 'Sunday';\\n    break;\\n  case 2:\\n    dayName = 'Monday';\\n    break;\\n  case 3:\\n    dayName = 'Tuesday';\\n    break;\\n  case 4:\\n    dayName = 'Wednesday';\\n    break;\\n  case 5:\\n    dayName = 'Thursday';\\n    break;\\n  case 6:\\n    dayName = 'Friday';\\n    break;\\n  case 7:\\n    dayName = 'Saturday';\\n    break;\\n  default:\\n    dayName = 'Invalid day';\\n}\\nconsole.log(dayName);\\n```\\n---\\nclass: middle center\\n# Your Turn #3\\n\\n* http://jsbin.com/ferejed/edit?js,console\\n???\\nEXERCISE Switch Statement\\n---\\nclass: middle center\\n## Try Catches\\n\\n* This will save your ass.\\n---\\nclass: middle center\\n## Try Catches\\n\\n<p>Try Catches are our safeguards as developers to prevent an error from\\nappearing for a user. In case our code breaks, we can hide it or minimize\\nthe \\\"damage\\\".</p>\\n\\n---\\n## Try Catches\\n\\n```javascript\\ntry {\\n  // code block goes here\\n} catch (err) {\\n  // error handling\\n}\\n```\\n---\\n## Try Catches\\n\\n```javascript\\ntry {\\n  alert('Start of try block'); // #1 This line executes\\n\\n  randomVariable; // error, variable is not defined!\\n\\n  alert('End of try (never reached)'); // #2 This line is never reached\\n} catch (err) {\\n  alert('Error has occurred!'); // #3 This is line executed since an error has occurred.\\n}\\n\\nalert('...Then the execution continues'); // #4 Finally, this is executed.\\n```\\n---\\nclass: middle center\\n## Your Turn #4\\n\\n* http://jsbin.com/xisuhiw/edit?js,console\\n\\n???\\nEXERCISE Try/Catch\\n---\\n## Try Catch FINALLY\\n\\n<p>Another component of Try/Catch</p>\\n\\n---\\n## Try Catch FINALLY\\n\\n```javascript\\ntry {\\n  // Block of code to try\\n} catch (err) {\\n  // Block of code to handle errors\\n} finally {\\n  // Block of code to be executed regardless of the try..catch result\\n}\\n```\\n---\\n## Try Catch FINALLY\\n```javascript\\nfunction myFunction() {\\n    let message = document.getElementById(\\\"message\\\");\\n    message.innerHTML = \\\"\\\";\\n    let x = document.getElementById(\\\"demo\\\").value;\\n    try {\\n        if(x == \\\"\\\") throw \\\"Please input a number\\\";\\n        if(x < 10) throw \\\"Your number is too low!\\\";\\n        if(x > 25) throw \\\"Your number is too high!\\\";\\n    }\\n    catch(err) {\\n        message.innerHTML = \\\"Input \\\" + err;\\n    }\\n    finally {\\n        document.getElementById(\\\"demo\\\").value = \\\"\\\";\\n    }\\n}\\n```\\n---\\nclass: middle center\\n# Your Turn #5\\n\\n* http://jsbin.com/xulefuh/edit?js,console\\n???\\nEXERCISE TRY/CATCH/FINALLY - Throw\\n---\\nclass: middle center\\n## Ternary Operator\\n\\n<p>Shorthand IF/ELSE Statement</p>\\n\\n---\\n## Ternary Operator\\n```javascript\\ncondition ? expression on true : expression on false\\n```\\n---\\n## Ternary Operator\\n\\n## TRADITIONAL IF/ELSE\\n```javascript\\nlet age = 17;\\n\\nif (age >= 18) {\\n  ('Welcome to our site.');\\n} else {\\n  ('Sorry, you must be 18 or older to enter');\\n}\\n```\\n\\n## TERNARY\\n```javascript\\nlet age = 17;\\n\\nconst isOldEnough = age >= 18 ? 'Welcome to our site.' : 'Sorry; you must be 18 or older to enter.';\\n```\\n---\\nclass: middle center\\n\\n# Your Turn! #6\\n\\n* http://jsbin.com/vesayer/edit?js,console\\n\\n???\\nEXERCISE TERNARY\\n\\n---\\nclass: middle center\\n## Some More Practice\\n\\n* http://jsbin.com/pigopin/edit?js,console\\n\\n---\\nclass: middle center\\n## If We Have Time...\\n\\n* http://jsbin.com/dunefid/edit?js,console\\n\"},\"fields\":{\"slug\":\"/courses/frontend-foundations/slides/arrows_switches/\"}}}]}},\"pathContext\":{\"slug\":\"/courses/frontend-foundations/slides/arrows_switches/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/courses-frontend-foundations-slides-arrows-switches.json\n// module id = 404\n// module chunks = 11397749705369"],"sourceRoot":""}