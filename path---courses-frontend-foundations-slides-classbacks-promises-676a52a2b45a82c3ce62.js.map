{"version":3,"sources":["webpack:///path---courses-frontend-foundations-slides-classbacks-promises-676a52a2b45a82c3ce62.js","webpack:///./.cache/json/courses-frontend-foundations-slides-classbacks-promises.json"],"names":["webpackJsonp","419","module","exports","data","allMarkdownRemark","edges","node","html","internal","content","fields","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,IACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,mBAAqBC,QAAUC,MAAQC,KAAA,o5oBAAkvqBC,UAAkDC,QAAA,q6IAAw9IC,QAAWC,KAAA,kEAAwEC,aAAgBD,KAAA","file":"path---courses-frontend-foundations-slides-classbacks-promises-676a52a2b45a82c3ce62.js","sourcesContent":["webpackJsonp([259972220644053],{\n\n/***/ 419:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"html\":\"<p>class: middle center</p>\\n<h3>Callbacks, but first a question ?</h3>\\n<h1>Is Javascript synchronous or asynchronous ?</h1>\\n<h3>synchronously, you wait for it to finish before moving on to another task. When you execute something asynchronously, you can move on to another task before it finishes</h3>\\n<hr>\\n<p>class: middle center</p>\\n<h1>Javascript, is single threaded, and <strong>synchronous</strong>!</h1>\\n<h3>*but we often use asynchronous patterns</h3>\\n<h3>*Single threaded means that one command is being executed at a time.</h3>\\n<hr>\\n<p>class: middle center</p>\\n<h1>Callbacks</h1>\\n<ul>\\n<li>just the name of a convention for using JavaScript functions.</li>\\n<li>not a language feature, more of design pattern</li>\\n</ul>\\n<hr>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">fullName</span><span class=\\\"token punctuation\\\">(</span>firstName<span class=\\\"token punctuation\\\">,</span> lastName<span class=\\\"token punctuation\\\">,</span> handler<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"My name is \\\"</span> <span class=\\\"token operator\\\">+</span> firstName <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\" \\\"</span> <span class=\\\"token operator\\\">+</span> lastName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">handler</span><span class=\\\"token punctuation\\\">(</span>lastName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">handler</span><span class=\\\"token punctuation\\\">(</span>firstName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">var</span> <span class=\\\"token function-variable function\\\">greeting</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>lname<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Welcome Mr. \\\"</span> <span class=\\\"token operator\\\">+</span> lname<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>greeting<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">fullName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Jackie\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"Chan\\\"</span><span class=\\\"token punctuation\\\">,</span> greeting<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<h1>üôÅ</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">readdir</span><span class=\\\"token punctuation\\\">(</span>source<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">,</span> files<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Error finding files: \\\"</span> <span class=\\\"token operator\\\">+</span> err<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    files<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>filename<span class=\\\"token punctuation\\\">,</span> fileIndex<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>filename<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token function\\\">gm</span><span class=\\\"token punctuation\\\">(</span>source <span class=\\\"token operator\\\">+</span> filename<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">size</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">,</span> values<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Error identifying file size: \\\"</span> <span class=\\\"token operator\\\">+</span> err<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n          console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>filename <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\" : \\\"</span> <span class=\\\"token operator\\\">+</span> values<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          aspect <span class=\\\"token operator\\\">=</span> values<span class=\\\"token punctuation\\\">.</span>width <span class=\\\"token operator\\\">/</span> values<span class=\\\"token punctuation\\\">.</span>height<span class=\\\"token punctuation\\\">;</span>\\n          widths<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span>\\n            <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>width<span class=\\\"token punctuation\\\">,</span> widthIndex<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n              height <span class=\\\"token operator\\\">=</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">round</span><span class=\\\"token punctuation\\\">(</span>width <span class=\\\"token operator\\\">/</span> aspect<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n              console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>\\n                <span class=\\\"token string\\\">\\\"resizing \\\"</span> <span class=\\\"token operator\\\">+</span> filename <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\"to \\\"</span> <span class=\\\"token operator\\\">+</span> height <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\"x\\\"</span> <span class=\\\"token operator\\\">+</span> height\\n              <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n              <span class=\\\"token comment\\\">//guess what happens here, yep, puppy killer, you guessed it</span>\\n              <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resize</span><span class=\\\"token punctuation\\\">(</span>width<span class=\\\"token punctuation\\\">,</span> height<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">write</span><span class=\\\"token punctuation\\\">(</span>\\n                dest <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\"w\\\"</span> <span class=\\\"token operator\\\">+</span> width <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\"_\\\"</span> <span class=\\\"token operator\\\">+</span> filename<span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Error writing file: \\\"</span> <span class=\\\"token operator\\\">+</span> err<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n              <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<p>class: middle center\\n<img src=\\\"https://www.twilio.com/blog/wp-content/uploads/2016/09/31orCejQRkSvmchYeZC2GKswNtst-d_xEoSPoP3X-bAm9RRe8hxz59vVZrrRm78VvJgVbuUo5R7dAikR2gY1rxtqQ14yMJP8K4CS3Siiir_wRpB6IYgoWGlpokE51vV4eYAI2lpP-1.png\\\"></p>\\n<hr>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">doHomework</span><span class=\\\"token punctuation\\\">(</span>subject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`Starting my </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>subject<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> homework.`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">doHomework</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"math\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// Alerts: Starting my math homework.</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">doHomework</span><span class=\\\"token punctuation\\\">(</span>subject<span class=\\\"token punctuation\\\">,</span> callback<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`Starting my </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>subject<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> homework.`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">doHomework</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"math\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Finished my homework\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">doHomework</span><span class=\\\"token punctuation\\\">(</span>subject<span class=\\\"token punctuation\\\">,</span> callback<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`Starting my </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>subject<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> homework.`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">alertFinished</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Finished my homework\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">doHomework</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"math\\\"</span><span class=\\\"token punctuation\\\">,</span> alertFinished<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<p>class: middle center</p>\\n<h1>Super Example aka Real Life</h1>\\n<hr>\\n<p>class: middle center</p>\\n<h2>ok, so what about</h2>\\n<h1>Promises</h1>\\n<h2>‚Äòmember we were gonna talk about them?</h2>\\n<hr>\\n<p>class: middle center</p>\\n<h1>A promise has 3 states. They are:</h1>\\n<ol>\\n<li>Promise is pending: You don‚Äôt know if you will get that phone until next week.</li>\\n<li>Promise is resolved: Your mom really buy you a brand new phone.</li>\\n<li>Promise is rejected: You don‚Äôt get a new phone because your mom is not happy.</li>\\n</ol>\\n<hr>\\n<h1>Building a Promise</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">/* ES5 */</span>\\n<span class=\\\"token keyword\\\">var</span> isMomHappy <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Promise</span>\\n<span class=\\\"token keyword\\\">var</span> willIGetNewPhone <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>isMomHappy<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> phone <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n      brand<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Samsung\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      color<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"black\\\"</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>phone<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// fulfilled</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> reason <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"mom is not happy\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span>reason<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// reject</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<h1>Consuming a Promise</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">/* ES5 */</span>\\n<span class=\\\"token operator\\\">...</span>\\n\\n<span class=\\\"token comment\\\">// call our promise</span>\\n<span class=\\\"token keyword\\\">var</span> <span class=\\\"token function-variable function\\\">askMom</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    willIGetNewPhone\\n        <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span>fulfilled<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token comment\\\">// yay, you got a new phone</span>\\n            console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>fulfilled<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n         <span class=\\\"token comment\\\">// output: { brand: 'Samsung', color: 'black' }</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">catch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span>error<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token comment\\\">// oops, mom don't buy it</span>\\n            console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>error<span class=\\\"token punctuation\\\">.</span>message<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n         <span class=\\\"token comment\\\">// output: 'mom is not happy'</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">askMom</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\",\"internal\":{\"content\":\"---\\ntitle: \\\"Callbacks and Promises\\\" \\ncourseId:  \\\"FSWG101\\\"\\ncirriculum: \\n  - \\\"Software Development\\\"\\ntype: \\\"slide\\\"\\ndraft: false\\n---\\n\\nclass: middle center\\n\\n### Callbacks, but first a question ?\\n\\n# Is Javascript synchronous or asynchronous ?\\n\\n### synchronously, you wait for it to finish before moving on to another task. When you execute something asynchronously, you can move on to another task before it finishes\\n\\n---\\n\\nclass: middle center\\n\\n# Javascript, is single threaded, and **synchronous**!\\n\\n### \\\\*but we often use asynchronous patterns\\n\\n### \\\\*Single threaded means that one command is being executed at a time.\\n\\n---\\n\\nclass: middle center\\n\\n# Callbacks\\n\\n* just the name of a convention for using JavaScript functions.\\n* not a language feature, more of design pattern\\n\\n---\\n\\n```javascript\\nfunction fullName(firstName, lastName, handler) {\\n  console.log(\\\"My name is \\\" + firstName + \\\" \\\" + lastName);\\n  handler(lastName);\\n  handler(firstName);\\n}\\n\\nvar greeting = function(lname) {\\n  console.log(\\\"Welcome Mr. \\\" + lname);\\n};\\nconsole.log(greeting);\\n\\nfullName(\\\"Jackie\\\", \\\"Chan\\\", greeting);\\n```\\n\\n---\\n\\n# üôÅ\\n\\n```javascript\\nfs.readdir(source, function(err, files) {\\n  if (err) {\\n    console.log(\\\"Error finding files: \\\" + err);\\n  } else {\\n    files.forEach(function(filename, fileIndex) {\\n      console.log(filename);\\n      gm(source + filename).size(function(err, values) {\\n        if (err) {\\n          console.log(\\\"Error identifying file size: \\\" + err);\\n        } else {\\n          console.log(filename + \\\" : \\\" + values);\\n          aspect = values.width / values.height;\\n          widths.forEach(\\n            function(width, widthIndex) {\\n              height = Math.round(width / aspect);\\n              console.log(\\n                \\\"resizing \\\" + filename + \\\"to \\\" + height + \\\"x\\\" + height\\n              );\\n              //guess what happens here, yep, puppy killer, you guessed it\\n              this.resize(width, height).write(\\n                dest + \\\"w\\\" + width + \\\"_\\\" + filename,\\n                function(err) {\\n                  if (err) console.log(\\\"Error writing file: \\\" + err);\\n                }\\n              );\\n            }.bind(this)\\n          );\\n        }\\n      });\\n    });\\n  }\\n});\\n```\\n\\n---\\n\\nclass: middle center\\n![](https://www.twilio.com/blog/wp-content/uploads/2016/09/31orCejQRkSvmchYeZC2GKswNtst-d_xEoSPoP3X-bAm9RRe8hxz59vVZrrRm78VvJgVbuUo5R7dAikR2gY1rxtqQ14yMJP8K4CS3Siiir_wRpB6IYgoWGlpokE51vV4eYAI2lpP-1.png)\\n\\n---\\n\\n```js\\nfunction doHomework(subject) {\\n  alert(`Starting my ${subject} homework.`);\\n}\\n\\ndoHomework(\\\"math\\\");\\n// Alerts: Starting my math homework.\\n```\\n\\n---\\n\\n```js\\nfunction doHomework(subject, callback) {\\n  alert(`Starting my ${subject} homework.`);\\n  callback();\\n}\\n\\ndoHomework(\\\"math\\\", function() {\\n  alert(\\\"Finished my homework\\\");\\n});\\n```\\n\\n---\\n\\n```js\\nfunction doHomework(subject, callback) {\\n  alert(`Starting my ${subject} homework.`);\\n  callback();\\n}\\n\\nfunction alertFinished() {\\n  alert(\\\"Finished my homework\\\");\\n}\\n\\ndoHomework(\\\"math\\\", alertFinished);\\n```\\n\\n---\\n\\nclass: middle center\\n\\n# Super Example aka Real Life\\n\\n---\\n\\nclass: middle center\\n\\n## ok, so what about\\n\\n# Promises\\n\\n## 'member we were gonna talk about them?\\n\\n---\\n\\nclass: middle center\\n\\n# A promise has 3 states. They are:\\n\\n1. Promise is pending: You don't know if you will get that phone until next week.\\n2. Promise is resolved: Your mom really buy you a brand new phone.\\n3. Promise is rejected: You don't get a new phone because your mom is not happy.\\n\\n---\\n\\n# Building a Promise\\n\\n```javascript\\n/* ES5 */\\nvar isMomHappy = false;\\n\\n// Promise\\nvar willIGetNewPhone = new Promise(function(resolve, reject) {\\n  if (isMomHappy) {\\n    var phone = {\\n      brand: \\\"Samsung\\\",\\n      color: \\\"black\\\"\\n    };\\n    resolve(phone); // fulfilled\\n  } else {\\n    var reason = new Error(\\\"mom is not happy\\\");\\n    reject(reason); // reject\\n  }\\n});\\n```\\n\\n---\\n\\n# Consuming a Promise\\n\\n```javascript\\n/* ES5 */\\n...\\n\\n// call our promise\\nvar askMom = function () {\\n    willIGetNewPhone\\n        .then(function (fulfilled) {\\n            // yay, you got a new phone\\n            console.log(fulfilled);\\n         // output: { brand: 'Samsung', color: 'black' }\\n        })\\n        .catch(function (error) {\\n            // oops, mom don't buy it\\n            console.log(error.message);\\n         // output: 'mom is not happy'\\n        });\\n};\\n\\naskMom();\\n```\\n\"},\"fields\":{\"slug\":\"/courses/frontend-foundations/slides/classbacks-promises/\"}}}]}},\"pathContext\":{\"slug\":\"/courses/frontend-foundations/slides/classbacks-promises/\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---courses-frontend-foundations-slides-classbacks-promises-676a52a2b45a82c3ce62.js","module.exports = {\"data\":{\"allMarkdownRemark\":{\"edges\":[{\"node\":{\"html\":\"<p>class: middle center</p>\\n<h3>Callbacks, but first a question ?</h3>\\n<h1>Is Javascript synchronous or asynchronous ?</h1>\\n<h3>synchronously, you wait for it to finish before moving on to another task. When you execute something asynchronously, you can move on to another task before it finishes</h3>\\n<hr>\\n<p>class: middle center</p>\\n<h1>Javascript, is single threaded, and <strong>synchronous</strong>!</h1>\\n<h3>*but we often use asynchronous patterns</h3>\\n<h3>*Single threaded means that one command is being executed at a time.</h3>\\n<hr>\\n<p>class: middle center</p>\\n<h1>Callbacks</h1>\\n<ul>\\n<li>just the name of a convention for using JavaScript functions.</li>\\n<li>not a language feature, more of design pattern</li>\\n</ul>\\n<hr>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">fullName</span><span class=\\\"token punctuation\\\">(</span>firstName<span class=\\\"token punctuation\\\">,</span> lastName<span class=\\\"token punctuation\\\">,</span> handler<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"My name is \\\"</span> <span class=\\\"token operator\\\">+</span> firstName <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\" \\\"</span> <span class=\\\"token operator\\\">+</span> lastName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">handler</span><span class=\\\"token punctuation\\\">(</span>lastName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">handler</span><span class=\\\"token punctuation\\\">(</span>firstName<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">var</span> <span class=\\\"token function-variable function\\\">greeting</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>lname<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Welcome Mr. \\\"</span> <span class=\\\"token operator\\\">+</span> lname<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\nconsole<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>greeting<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">fullName</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Jackie\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token string\\\">\\\"Chan\\\"</span><span class=\\\"token punctuation\\\">,</span> greeting<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<h1>üôÅ</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code>fs<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">readdir</span><span class=\\\"token punctuation\\\">(</span>source<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">,</span> files<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Error finding files: \\\"</span> <span class=\\\"token operator\\\">+</span> err<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    files<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>filename<span class=\\\"token punctuation\\\">,</span> fileIndex<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n      console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>filename<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n      <span class=\\\"token function\\\">gm</span><span class=\\\"token punctuation\\\">(</span>source <span class=\\\"token operator\\\">+</span> filename<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">size</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">,</span> values<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n        <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n          console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Error identifying file size: \\\"</span> <span class=\\\"token operator\\\">+</span> err<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n          console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>filename <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\" : \\\"</span> <span class=\\\"token operator\\\">+</span> values<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n          aspect <span class=\\\"token operator\\\">=</span> values<span class=\\\"token punctuation\\\">.</span>width <span class=\\\"token operator\\\">/</span> values<span class=\\\"token punctuation\\\">.</span>height<span class=\\\"token punctuation\\\">;</span>\\n          widths<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">forEach</span><span class=\\\"token punctuation\\\">(</span>\\n            <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>width<span class=\\\"token punctuation\\\">,</span> widthIndex<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n              height <span class=\\\"token operator\\\">=</span> Math<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">round</span><span class=\\\"token punctuation\\\">(</span>width <span class=\\\"token operator\\\">/</span> aspect<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n              console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>\\n                <span class=\\\"token string\\\">\\\"resizing \\\"</span> <span class=\\\"token operator\\\">+</span> filename <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\"to \\\"</span> <span class=\\\"token operator\\\">+</span> height <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\"x\\\"</span> <span class=\\\"token operator\\\">+</span> height\\n              <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n              <span class=\\\"token comment\\\">//guess what happens here, yep, puppy killer, you guessed it</span>\\n              <span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">resize</span><span class=\\\"token punctuation\\\">(</span>width<span class=\\\"token punctuation\\\">,</span> height<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">write</span><span class=\\\"token punctuation\\\">(</span>\\n                dest <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\"w\\\"</span> <span class=\\\"token operator\\\">+</span> width <span class=\\\"token operator\\\">+</span> <span class=\\\"token string\\\">\\\"_\\\"</span> <span class=\\\"token operator\\\">+</span> filename<span class=\\\"token punctuation\\\">,</span>\\n                <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n                  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Error writing file: \\\"</span> <span class=\\\"token operator\\\">+</span> err<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n                <span class=\\\"token punctuation\\\">}</span>\\n              <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n            <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">bind</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">this</span><span class=\\\"token punctuation\\\">)</span>\\n          <span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n        <span class=\\\"token punctuation\\\">}</span>\\n      <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<p>class: middle center\\n<img src=\\\"https://www.twilio.com/blog/wp-content/uploads/2016/09/31orCejQRkSvmchYeZC2GKswNtst-d_xEoSPoP3X-bAm9RRe8hxz59vVZrrRm78VvJgVbuUo5R7dAikR2gY1rxtqQ14yMJP8K4CS3Siiir_wRpB6IYgoWGlpokE51vV4eYAI2lpP-1.png\\\"></p>\\n<hr>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">doHomework</span><span class=\\\"token punctuation\\\">(</span>subject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`Starting my </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>subject<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> homework.`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">doHomework</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"math\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token comment\\\">// Alerts: Starting my math homework.</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">doHomework</span><span class=\\\"token punctuation\\\">(</span>subject<span class=\\\"token punctuation\\\">,</span> callback<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`Starting my </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>subject<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> homework.`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">doHomework</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"math\\\"</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Finished my homework\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-js\\\"><code><span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">doHomework</span><span class=\\\"token punctuation\\\">(</span>subject<span class=\\\"token punctuation\\\">,</span> callback<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token string\\\">`Starting my </span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>subject<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\"> homework.`</span></span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n  <span class=\\\"token function\\\">callback</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">alertFinished</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token function\\\">alert</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"Finished my homework\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token function\\\">doHomework</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"math\\\"</span><span class=\\\"token punctuation\\\">,</span> alertFinished<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<p>class: middle center</p>\\n<h1>Super Example aka Real Life</h1>\\n<hr>\\n<p>class: middle center</p>\\n<h2>ok, so what about</h2>\\n<h1>Promises</h1>\\n<h2>‚Äòmember we were gonna talk about them?</h2>\\n<hr>\\n<p>class: middle center</p>\\n<h1>A promise has 3 states. They are:</h1>\\n<ol>\\n<li>Promise is pending: You don‚Äôt know if you will get that phone until next week.</li>\\n<li>Promise is resolved: Your mom really buy you a brand new phone.</li>\\n<li>Promise is rejected: You don‚Äôt get a new phone because your mom is not happy.</li>\\n</ol>\\n<hr>\\n<h1>Building a Promise</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">/* ES5 */</span>\\n<span class=\\\"token keyword\\\">var</span> isMomHappy <span class=\\\"token operator\\\">=</span> <span class=\\\"token boolean\\\">false</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token comment\\\">// Promise</span>\\n<span class=\\\"token keyword\\\">var</span> willIGetNewPhone <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Promise</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span><span class=\\\"token punctuation\\\">(</span>resolve<span class=\\\"token punctuation\\\">,</span> reject<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>isMomHappy<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> phone <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n      brand<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"Samsung\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n      color<span class=\\\"token punctuation\\\">:</span> <span class=\\\"token string\\\">\\\"black\\\"</span>\\n    <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">resolve</span><span class=\\\"token punctuation\\\">(</span>phone<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// fulfilled</span>\\n  <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">else</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token keyword\\\">var</span> reason <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">new</span> <span class=\\\"token class-name\\\">Error</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">\\\"mom is not happy\\\"</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n    <span class=\\\"token function\\\">reject</span><span class=\\\"token punctuation\\\">(</span>reason<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span> <span class=\\\"token comment\\\">// reject</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\\n<hr>\\n<h1>Consuming a Promise</h1>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-javascript\\\"><code><span class=\\\"token comment\\\">/* ES5 */</span>\\n<span class=\\\"token operator\\\">...</span>\\n\\n<span class=\\\"token comment\\\">// call our promise</span>\\n<span class=\\\"token keyword\\\">var</span> <span class=\\\"token function-variable function\\\">askMom</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n    willIGetNewPhone\\n        <span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span>fulfilled<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token comment\\\">// yay, you got a new phone</span>\\n            console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>fulfilled<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n         <span class=\\\"token comment\\\">// output: { brand: 'Samsung', color: 'black' }</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n        <span class=\\\"token punctuation\\\">.</span><span class=\\\"token keyword\\\">catch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token keyword\\\">function</span> <span class=\\\"token punctuation\\\">(</span>error<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n            <span class=\\\"token comment\\\">// oops, mom don't buy it</span>\\n            console<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">log</span><span class=\\\"token punctuation\\\">(</span>error<span class=\\\"token punctuation\\\">.</span>message<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n         <span class=\\\"token comment\\\">// output: 'mom is not happy'</span>\\n        <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">;</span>\\n\\n<span class=\\\"token function\\\">askMom</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">;</span>\\n</code></pre>\\n      </div>\",\"internal\":{\"content\":\"---\\ntitle: \\\"Callbacks and Promises\\\" \\ncourseId:  \\\"FSWG101\\\"\\ncirriculum: \\n  - \\\"Software Development\\\"\\ntype: \\\"slide\\\"\\ndraft: false\\n---\\n\\nclass: middle center\\n\\n### Callbacks, but first a question ?\\n\\n# Is Javascript synchronous or asynchronous ?\\n\\n### synchronously, you wait for it to finish before moving on to another task. When you execute something asynchronously, you can move on to another task before it finishes\\n\\n---\\n\\nclass: middle center\\n\\n# Javascript, is single threaded, and **synchronous**!\\n\\n### \\\\*but we often use asynchronous patterns\\n\\n### \\\\*Single threaded means that one command is being executed at a time.\\n\\n---\\n\\nclass: middle center\\n\\n# Callbacks\\n\\n* just the name of a convention for using JavaScript functions.\\n* not a language feature, more of design pattern\\n\\n---\\n\\n```javascript\\nfunction fullName(firstName, lastName, handler) {\\n  console.log(\\\"My name is \\\" + firstName + \\\" \\\" + lastName);\\n  handler(lastName);\\n  handler(firstName);\\n}\\n\\nvar greeting = function(lname) {\\n  console.log(\\\"Welcome Mr. \\\" + lname);\\n};\\nconsole.log(greeting);\\n\\nfullName(\\\"Jackie\\\", \\\"Chan\\\", greeting);\\n```\\n\\n---\\n\\n# üôÅ\\n\\n```javascript\\nfs.readdir(source, function(err, files) {\\n  if (err) {\\n    console.log(\\\"Error finding files: \\\" + err);\\n  } else {\\n    files.forEach(function(filename, fileIndex) {\\n      console.log(filename);\\n      gm(source + filename).size(function(err, values) {\\n        if (err) {\\n          console.log(\\\"Error identifying file size: \\\" + err);\\n        } else {\\n          console.log(filename + \\\" : \\\" + values);\\n          aspect = values.width / values.height;\\n          widths.forEach(\\n            function(width, widthIndex) {\\n              height = Math.round(width / aspect);\\n              console.log(\\n                \\\"resizing \\\" + filename + \\\"to \\\" + height + \\\"x\\\" + height\\n              );\\n              //guess what happens here, yep, puppy killer, you guessed it\\n              this.resize(width, height).write(\\n                dest + \\\"w\\\" + width + \\\"_\\\" + filename,\\n                function(err) {\\n                  if (err) console.log(\\\"Error writing file: \\\" + err);\\n                }\\n              );\\n            }.bind(this)\\n          );\\n        }\\n      });\\n    });\\n  }\\n});\\n```\\n\\n---\\n\\nclass: middle center\\n![](https://www.twilio.com/blog/wp-content/uploads/2016/09/31orCejQRkSvmchYeZC2GKswNtst-d_xEoSPoP3X-bAm9RRe8hxz59vVZrrRm78VvJgVbuUo5R7dAikR2gY1rxtqQ14yMJP8K4CS3Siiir_wRpB6IYgoWGlpokE51vV4eYAI2lpP-1.png)\\n\\n---\\n\\n```js\\nfunction doHomework(subject) {\\n  alert(`Starting my ${subject} homework.`);\\n}\\n\\ndoHomework(\\\"math\\\");\\n// Alerts: Starting my math homework.\\n```\\n\\n---\\n\\n```js\\nfunction doHomework(subject, callback) {\\n  alert(`Starting my ${subject} homework.`);\\n  callback();\\n}\\n\\ndoHomework(\\\"math\\\", function() {\\n  alert(\\\"Finished my homework\\\");\\n});\\n```\\n\\n---\\n\\n```js\\nfunction doHomework(subject, callback) {\\n  alert(`Starting my ${subject} homework.`);\\n  callback();\\n}\\n\\nfunction alertFinished() {\\n  alert(\\\"Finished my homework\\\");\\n}\\n\\ndoHomework(\\\"math\\\", alertFinished);\\n```\\n\\n---\\n\\nclass: middle center\\n\\n# Super Example aka Real Life\\n\\n---\\n\\nclass: middle center\\n\\n## ok, so what about\\n\\n# Promises\\n\\n## 'member we were gonna talk about them?\\n\\n---\\n\\nclass: middle center\\n\\n# A promise has 3 states. They are:\\n\\n1. Promise is pending: You don't know if you will get that phone until next week.\\n2. Promise is resolved: Your mom really buy you a brand new phone.\\n3. Promise is rejected: You don't get a new phone because your mom is not happy.\\n\\n---\\n\\n# Building a Promise\\n\\n```javascript\\n/* ES5 */\\nvar isMomHappy = false;\\n\\n// Promise\\nvar willIGetNewPhone = new Promise(function(resolve, reject) {\\n  if (isMomHappy) {\\n    var phone = {\\n      brand: \\\"Samsung\\\",\\n      color: \\\"black\\\"\\n    };\\n    resolve(phone); // fulfilled\\n  } else {\\n    var reason = new Error(\\\"mom is not happy\\\");\\n    reject(reason); // reject\\n  }\\n});\\n```\\n\\n---\\n\\n# Consuming a Promise\\n\\n```javascript\\n/* ES5 */\\n...\\n\\n// call our promise\\nvar askMom = function () {\\n    willIGetNewPhone\\n        .then(function (fulfilled) {\\n            // yay, you got a new phone\\n            console.log(fulfilled);\\n         // output: { brand: 'Samsung', color: 'black' }\\n        })\\n        .catch(function (error) {\\n            // oops, mom don't buy it\\n            console.log(error.message);\\n         // output: 'mom is not happy'\\n        });\\n};\\n\\naskMom();\\n```\\n\"},\"fields\":{\"slug\":\"/courses/frontend-foundations/slides/classbacks-promises/\"}}}]}},\"pathContext\":{\"slug\":\"/courses/frontend-foundations/slides/classbacks-promises/\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/courses-frontend-foundations-slides-classbacks-promises.json\n// module id = 419\n// module chunks = 259972220644053"],"sourceRoot":""}